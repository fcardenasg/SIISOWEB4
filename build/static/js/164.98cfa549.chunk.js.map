{"version":3,"sources":["api/clients/OrdersClient.js","modules/Orders/ListOrdersIndividual.jsx","components/alert/AlertAll.jsx","../node_modules/@mui/icons-material/AddCircleOutlineOutlined.js","../node_modules/@mui/icons-material/PrintTwoTone.js","../node_modules/@mui/icons-material/FileCopyTwoTone.js"],"names":["GetAllOrders","page","pageSize","a","getData","Url","Ordenes","GetByIdOrders","id","OrdenesId","InsertOrders","ordenes","postData","DeleteOrders","idOrdenes","deleteData","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","label","align","EnhancedTableHead","onClick","onSelectAllClick","numSelected","rowCount","onRequestSort","theme","selected","padding","sx","pl","color","indeterminate","checked","onChange","inputProps","colSpan","EnhancedTableToolbar","length","headCell","disablePadding","sortDirection","active","direction","property","event","component","visuallyHidden","pr","variant","palette","mode","p","secondary","main","TitleButton","Seleccionadas","flexGrow","title","Eliminar","size","fontSize","ListOrdersIndividual","navigate","useNavigate","useState","idCheck","setIdCheck","openDelete","setOpenDelete","lsOrders","setLsOrders","useTheme","setOrder","setOrderBy","setSelected","setPage","rowsPerPage","setRowsPerPage","search","setSearch","rows","setRows","GetAll","lsServer","data","entities","console","log","useEffect","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleDelete","swal","ParamDelete","then","willDelete","status","error","emptyRows","Math","max","content","open","onClose","container","justifyContent","alignItems","spacing","item","xs","sm","InputProps","startAdornment","position","newString","target","value","newRows","filter","row","matches","containsQuery","forEach","toString","toLowerCase","includes","placeholder","textAlign","startIcon","Agregar","minWidth","newSelectedId","n","isItemSelected","labelId","hover","role","tabIndex","scope","cursor","documento","nameEmpleado","ViewFormat","fecha","nameTipoExamen","sedeEmpleado","usuarioRegistro","style","height","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Message","TituloEliminar","text","TextoEliminar","icon","buttons","dangerMode","confirm","cancel","ParamCloseCase","TituloCerrarCaso","TextoCerrarCaso","ParamLoadingData","TituloCargar","TextoCargar","SlideTransition","props","Alert","React","forwardRef","ref","elevation","MessageSuccess","TransitionComponent","anchorOrigin","vertical","horizontal","autoHideDuration","severity","width","Guardar","MessageUpdate","Actualizar","MessageDelete","MessageError","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","opacity","cx","cy","r"],"mappings":"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","file":"static/js/164.98cfa549.chunk.js","sourcesContent":["import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllOrders = async (page, pageSize) => await getData(Url.Ordenes, { page, pageSize });\r\nexport const GetByIdOrders = async (id) => await getData(Url.OrdenesId, { id });\r\nexport const InsertOrders = async (ordenes) => await postData(Url.Ordenes, ordenes);\r\nexport const UpdateOrders = async (ordenes) => await putData(Url.Ordenes, ordenes);\r\nexport const DeleteOrders = async (idOrdenes) => await deleteData(Url.Ordenes, { idOrdenes });","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    CardContent,\r\n    Checkbox,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    Button,\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport { TitleButton } from 'components/helpers/Enums';\r\nimport swal from 'sweetalert';\r\nimport { MessageDelete, ParamDelete } from 'components/alert/AlertAll';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport PrintIcon from '@mui/icons-material/PrintTwoTone';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopyTwoTone';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport { ViewFormat } from 'components/helpers/Format';\r\nimport { DeleteOrders, GetAllOrders } from 'api/clients/OrdersClient';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'documento',\r\n        numeric: false,\r\n        label: 'Documento',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'nameEmpleado',\r\n        numeric: false,\r\n        label: 'Empleado',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'fecha',\r\n        numeric: false,\r\n        label: 'Fecha',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'idTipoExamen',\r\n        numeric: false,\r\n        label: 'Tipo de Examen',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'nameSede',\r\n        numeric: false,\r\n        label: 'Sede',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'usuarioCreacion',\r\n        numeric: false,\r\n        label: 'Usuario Que Atiende',\r\n        align: 'left'\r\n    },\r\n];\r\n\r\nfunction EnhancedTableHead({ onClick, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, theme, selected }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {numSelected > 0 && (\r\n                    <TableCell padding=\"none\" colSpan={8}>\r\n                        <EnhancedTableToolbar numSelected={selected.length} onClick={onClick} />\r\n                    </TableCell>\r\n                )}\r\n                {numSelected <= 0 &&\r\n                    headCells.map((headCell) => (\r\n                        <TableCell\r\n                            key={headCell.id}\r\n                            align={headCell.align}\r\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <Box component=\"span\" sx={visuallyHidden}>\r\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </Box>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    ))}\r\n                {numSelected <= 0 && (\r\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}>\r\n                            Acción\r\n                        </Typography>\r\n                    </TableCell>\r\n                )}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    theme: PropTypes.object,\r\n    selected: PropTypes.array,\r\n    onClick: PropTypes.func.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst EnhancedTableToolbar = ({ numSelected, onClick }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"h4\">\r\n                {numSelected} {TitleButton.Seleccionadas}\r\n            </Typography>\r\n        ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n                Nutrición\r\n            </Typography>\r\n        )}\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title={TitleButton.Eliminar} onClick={onClick}>\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nconst ListOrdersIndividual = () => {\r\n    const navigate = useNavigate();\r\n    const [idCheck, setIdCheck] = useState('');\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [lsOrders, setLsOrders] = useState([]);\r\n\r\n    const theme = useTheme();\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('fechaRegistro');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [search, setSearch] = useState('');\r\n    const [rows, setRows] = useState([]);\r\n\r\n    async function GetAll() {\r\n        try {\r\n            const lsServer = await GetAllOrders(0, 0);\r\n            setLsOrders(lsServer.data.entities);\r\n            setRows(lsServer.data.entities);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetAll();\r\n    }, [])\r\n\r\n    const handleSearch = (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString || '');\r\n\r\n        if (newString) {\r\n            const newRows = rows.filter((row) => {\r\n                let matches = true;\r\n\r\n                const properties = ['documento', 'nameEmpleado', 'fecha', 'idTipoExamen', 'nameSede', 'usuarioCreacion'];\r\n                let containsQuery = false;\r\n\r\n                properties.forEach((property) => {\r\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\r\n                        containsQuery = true;\r\n                    }\r\n                });\r\n\r\n                if (!containsQuery) {\r\n                    matches = false;\r\n                }\r\n                return matches;\r\n            });\r\n            setLsOrders(newRows);\r\n        } else {\r\n            setLsOrders(rows);\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n\r\n        if (event.target.checked) {\r\n            const newSelectedId = lsOrders.map((n) => n.id);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, id) => {\r\n        setIdCheck(id);\r\n\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        if (event?.target.value) setRowsPerPage(parseInt(event?.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            swal(ParamDelete).then(async (willDelete) => {\r\n                if (willDelete) {\r\n                    const result = await DeleteOrders(idCheck);\r\n                    if (result.status === 200) {\r\n                        setOpenDelete(true);\r\n                    }\r\n                    setSelected([]);\r\n                    GetAll();\r\n                } else\r\n                    setSelected([]);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - lsOrders.length) : 0;\r\n\r\n    return (\r\n        <MainCard title=\"Lista de Ordenes Individuales\" content={false}>\r\n            <MessageDelete open={openDelete} onClose={() => setOpenDelete(false)} />\r\n            <CardContent>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon fontSize=\"small\" />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Buscar\"\r\n                            value={search}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n                        <Tooltip title=\"Copiar\">\r\n                            <IconButton size=\"large\">\r\n                                <FileCopyIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Impresión\" onClick={() => navigate(`/occupational-examination/report/${idCheck}`)}>\r\n                            <IconButton size=\"large\">\r\n                                <PrintIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Button variant=\"contained\" size=\"large\" startIcon={<AddCircleOutlineOutlinedIcon />}\r\n                            onClick={() => navigate(\"/orders-individual/add\")}>\r\n                            {TitleButton.Agregar}\r\n                        </Button>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\r\n                    <EnhancedTableHead\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={lsOrders.length}\r\n                        theme={theme}\r\n                        selected={selected}\r\n                        onClick={handleDelete}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(lsOrders, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row, index) => {\r\n                                if (typeof row === 'string') return null;\r\n\r\n                                const isItemSelected = isSelected(row.id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={index}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n\r\n                                        <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event) => handleClick(event, row.id)}>\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId\r\n                                                }}\r\n                                            />\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {row.documento}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {row.nameEmpleado}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {ViewFormat(row.fecha)}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {row.nameTipoExamen}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {row.sedeEmpleado}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {row.usuarioRegistro}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                            <Tooltip title=\"Actualizar\" onClick={() => navigate(`/orders-individual/update/${row.id}`)}>\r\n                                                <IconButton size=\"large\">\r\n                                                    <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: 53 * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={lsOrders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ListOrdersIndividual;","import React from 'react';\r\nimport Slide from '@mui/material/Slide';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { Message } from 'components/helpers/Enums';\r\nimport { Snackbar } from '@mui/material';\r\n\r\nexport const ParamDelete = {\r\n    title: `${Message.TituloEliminar}`,\r\n    text: `${Message.TextoEliminar}`,\r\n    icon: \"error\",\r\n    buttons: [\"Cancelar\", \"Si\"],\r\n    dangerMode: true,\r\n    confirm: {\r\n        text: \"Si\",\r\n    },\r\n    cancel: {\r\n        text: \"Cancelar\",\r\n    },\r\n}\r\n\r\nexport const ParamCloseCase = {\r\n    title: `${Message.TituloCerrarCaso}`,\r\n    text: `${Message.TextoCerrarCaso}`,\r\n    icon: \"warning\",\r\n    buttons: [\"Cancelar\", \"Si\"],\r\n    dangerMode: true,\r\n    confirm: {\r\n        text: \"Si\",\r\n    },\r\n    cancel: {\r\n        text: \"Cancelar\",\r\n    },\r\n}\r\n\r\nexport const ParamLoadingData = {\r\n    title: `${Message.TituloCargar}`,\r\n    text: `${Message.TextoCargar}`,\r\n    icon: \"warning\",\r\n    buttons: [\"Cancelar\", \"Si\"],\r\n    dangerMode: true,\r\n    confirm: {\r\n        text: \"Si\",\r\n    },\r\n    cancel: {\r\n        text: \"Cancelar\",\r\n    },\r\n}\r\n\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Alert = React.forwardRef(\r\n    function Alert(props, ref) {\r\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n    }\r\n);\r\n\r\nexport const MessageSuccess = ({ open, onClose }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2500}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n                {Message.Guardar}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport const MessageUpdate = ({ open, onClose }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2500}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n                {Message.Actualizar}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport const MessageDelete = ({ open, onClose }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2500}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"error\" sx={{ width: '100%' }}>\r\n                {Message.Eliminar}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport const MessageError = ({ open, onClose, error }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2000}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"error\" sx={{ width: '100%' }}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5h8v3H8z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"18\",\n  cy: \"11.5\",\n  r: \"1\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8h-1V3H6v5H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zM8 5h8v3H8V5zm8 14H8v-4h8v4zm4-4h-2v-2H6v2H4v-4c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v4z\"\n}, \"2\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 13h12v2h2v-4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v4h2v-2zm12-2.5c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1z\",\n  opacity: \".3\"\n}, \"3\")], 'PrintTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 7H8v14h11v-9h-5z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zm4 16H8V7h6v5h5v9z\"\n}, \"1\")], 'FileCopyTwoTone');\n\nexports.default = _default;"],"sourceRoot":""}