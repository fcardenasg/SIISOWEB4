{"version":3,"sources":["../node_modules/@mui/icons-material/MoreHorizOutlined.js","ui-component/cards/ContactCard.js","views/application/contact/Card/index.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","avatarImage","ContactCard","avatar","contact","email","name","location","onActive","role","theme","useTheme","avatarProfile","useState","anchorEl","setAnchorEl","handleClose","Card","sx","p","bgcolor","palette","mode","dark","main","grey","border","borderColor","Grid","container","spacing","gridSpacing","item","xs","zeroMinWidth","onClick","style","cursor","Avatar","alt","size","src","width","height","fontSize","color","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","variant","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Typography","component","Button","startIcon","ContactCardPage","data","setData","getData","a","axios","get","response","users","reduce","curr","firstLatter","toUpperCase","prototype","hasOwnProperty","call","push","useEffect","user","setUser","modifyUser","u","post","then","idx","findIndex","userDetails","setUserDetails","userEdit","setUserEdit","MainCard","title","className","display","md","alignItems","OutlinedInput","placeholder","fullWidth","startAdornment","InputAdornment","position","stroke","company","work_email","personal_email","work_phone","personal_phone","image","User1","status","lastMessage","birthdayText","keys","map","key","index","Divider","primary","light","mt","mb","direction","userRow","i","lg","xl","phone","margin","UserDetails","onEditClick","UserEdit","onSave","onCancel","getMenuItemUtilityClass","slot","generateUtilityClass","menuItemClasses","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","typography","body1","justifyContent","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","backgroundClip","backgroundColor","action","hover","selected","mainChannel","selectedOpacity","alpha","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","React","inProps","ref","useThemeProps","autoFocus","focusVisibleClassName","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","Provider","children","clsx"],"mappings":"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","file":"static/js/184.249db984.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHorizOutlined');\n\nexports.default = _default;","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Card, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone';\r\nimport PhoneTwoToneIcon from '@mui/icons-material/PhoneTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\n\r\n// ==============================|| USER CONTACT CARD ||============================== //\r\n\r\nconst ContactCard = ({ avatar, contact, email, name, location, onActive, role }) => {\r\n    const theme = useTheme();\r\n\r\n    const avatarProfile = avatar && avatarImage(`./${avatar}`).default;\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                p: 2,\r\n                bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                border: theme.palette.mode === 'dark' ? 'none' : '1px solid',\r\n                borderColor: theme.palette.grey[100]\r\n            }}\r\n        >\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid\r\n                            item\r\n                            xs\r\n                            zeroMinWidth\r\n                            onClick={() => {\r\n                                onActive();\r\n                            }}\r\n                            style={{ cursor: 'pointer' }}\r\n                        >\r\n                            <Avatar alt={name} size=\"lg\" src={avatarProfile} sx={{ width: 72, height: 72 }} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MoreHorizOutlinedIcon\r\n                                fontSize=\"small\"\r\n                                sx={{ color: theme.palette.grey[500], cursor: 'pointer' }}\r\n                                aria-controls=\"menu-user-details-card\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                            />\r\n                            <Menu\r\n                                id=\"menu-user-details-card\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}> Today</MenuItem>\r\n                                <MenuItem onClick={handleClose}> This Month</MenuItem>\r\n                                <MenuItem onClick={handleClose}> This Year </MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\" component=\"div\">\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\">{role}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"caption\">Email</Typography>\r\n                    <Typography variant=\"h6\">{email}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={6}>\r\n                            <Typography variant=\"caption\">Phone</Typography>\r\n                            <Typography variant=\"h6\">{contact}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Typography variant=\"caption\">Location</Typography>\r\n                            <Typography variant=\"h6\">{location}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <Button variant=\"outlined\" sx={{ width: '100%' }} startIcon={<ChatBubbleTwoToneIcon />}>\r\n                                Message\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button variant=\"outlined\" color=\"secondary\" sx={{ width: '100%' }} startIcon={<PhoneTwoToneIcon />}>\r\n                                Call\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n};\r\n\r\nContactCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    contact: PropTypes.string,\r\n    email: PropTypes.string,\r\n    location: PropTypes.string,\r\n    name: PropTypes.string,\r\n    onActive: PropTypes.func,\r\n    role: PropTypes.string\r\n};\r\n\r\nexport default ContactCard;\r\n","import { useState, useEffect, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Divider, Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserDetails from '../UserDetails';\r\nimport UserEdit from '../UserEdit';\r\nimport ContactCard from 'ui-component/cards/ContactCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\n\r\n// ==============================|| CONTACT CARD ||============================== //\r\n\r\nconst ContactCardPage = () => {\r\n    const theme = useTheme();\r\n\r\n    // get all users details\r\n    const [data, setData] = useState({});\r\n    const convertData = (userData) =>\r\n        userData.reduce((a, curr) => {\r\n            const firstLatter = curr.name[0].toUpperCase();\r\n            if (Object.prototype.hasOwnProperty.call(a, firstLatter)) {\r\n                a[firstLatter].push(curr);\r\n            } else {\r\n                a[firstLatter] = [curr];\r\n            }\r\n            return a;\r\n        }, {});\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/chat/users');\r\n        setData(convertData(response.data.users));\r\n        return response.data.users;\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // edit selected user and modify users data\r\n    const [user, setUser] = useState({});\r\n    const modifyUser = async (u) => {\r\n        await axios.post('/api/chat/users/modify', u);\r\n        getData().then((d) => {\r\n            if (user) {\r\n                const idx = d.findIndex((item) => item.id === user.id);\r\n                if (idx > -1) setUser(d[idx]);\r\n            }\r\n        });\r\n    };\r\n\r\n    // handle new user insert action\r\n    const [userDetails, setUserDetails] = useState(false);\r\n    const [userEdit, setUserEdit] = useState(false);\r\n    const handleOnAdd = () => {\r\n        setUser({\r\n            name: '',\r\n            company: '',\r\n            role: '',\r\n            work_email: '',\r\n            personal_email: '',\r\n            work_phone: '',\r\n            personal_phone: '',\r\n            location: 'USA',\r\n            image: User1,\r\n            status: 'I am online',\r\n            lastMessage: '2h ago',\r\n            birthdayText: ''\r\n        });\r\n        setUserDetails(false);\r\n        setUserEdit(true);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Contact Cards\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid\r\n                    className=\"block\"\r\n                    item\r\n                    xs\r\n                    zeroMinWidth\r\n                    sx={{ display: userDetails || userEdit ? { xs: 'none', md: 'flex' } : 'flex' }}\r\n                >\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <OutlinedInput\r\n                                id=\"input-search-card-style1\"\r\n                                placeholder=\"Search Contact\"\r\n                                fullWidth\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" size=\"large\" startIcon={<AddCircleOutlineOutlinedIcon />} onClick={handleOnAdd}>\r\n                                Add\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {Object.keys(data).map((key, index) => (\r\n                            <Fragment key={index}>\r\n                                <Grid item xs={12}>\r\n                                    <Divider sx={{ borderColor: theme.palette.primary.light, mt: 0.625, mb: 1.875 }} />\r\n                                    <Typography variant=\"h4\" color=\"primary\" sx={{ fontSize: '1rem' }}>\r\n                                        {key.toUpperCase()}\r\n                                    </Typography>\r\n                                    <Divider sx={{ borderColor: theme.palette.primary.light, mt: 1.875, mb: 0.625 }} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                                        {data[key].map((userRow, i) => (\r\n                                            <Grid item xs={12} md={6} lg={4} xl={3} key={i}>\r\n                                                <ContactCard\r\n                                                    avatar={userRow.avatar}\r\n                                                    name={userRow.name}\r\n                                                    role={userRow.role}\r\n                                                    email={userRow.work_email}\r\n                                                    contact={userRow.phone}\r\n                                                    location={userRow.location}\r\n                                                    onActive={() => {\r\n                                                        setUser(userRow);\r\n                                                        setUserDetails(true);\r\n                                                        setUserEdit(false);\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {userDetails && (\r\n                    <Grid item sx={{ width: 342, margin: { xs: '0 auto', md: 'initial' } }}>\r\n                        <UserDetails\r\n                            user={user}\r\n                            onEditClick={() => {\r\n                                setUserDetails(false);\r\n                                setUserEdit(true);\r\n                            }}\r\n                            onClose={() => {\r\n                                setUserDetails(false);\r\n                                setUserEdit(false);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n\r\n                {userEdit && (\r\n                    <Grid item sx={{ width: 342, margin: { xs: '0 auto', md: 'initial' } }}>\r\n                        <UserEdit\r\n                            user={user}\r\n                            onSave={(u) => {\r\n                                if (u.id) setUserDetails(true);\r\n                                setUserEdit(false);\r\n                                modifyUser(u);\r\n                            }}\r\n                            onCancel={(u) => {\r\n                                if (u.id) setUserDetails(true);\r\n                                setUserEdit(false);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ContactCardPage;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"sourceRoot":""}