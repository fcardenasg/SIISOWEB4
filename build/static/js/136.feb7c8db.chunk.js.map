{"version":3,"sources":["formatdata/CatalogForm.js","modules/Catalog/Catalog.jsx","components/input/InputText.jsx","components/alert/AlertAll.jsx","components/input/InputSelect.jsx","api/clients/CatalogClient.js","../../src/validateFieldsNatively.ts","../../src/toNestError.ts","../../src/yup.ts","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","api/clients/TypeCatalogClient.js"],"names":["PostCatalog","nombre","codigo","idTipoCatalogo","usuarioRegistro","fechaRegistro","usuarioModifico","fechaModifico","PutCatalog","idCatalogo","validationSchema","yup","shape","required","ValidationMessage","Requerido","Catalog","user","useAuth","navigate","useNavigate","theme","useTheme","matchesXS","useMediaQuery","breakpoints","down","useState","typeCatalog","setTypeCatalog","openSuccess","setOpenSuccess","openError","setOpenError","errorMessage","setErrorMessage","methods","useForm","resolver","yupResolver","handleSubmit","errors","reset","useEffect","a","GetAllTypeCatalog","lsServer","result","data","entities","map","item","value","id","label","console","log","GetAll","handleClick","datos","DataToInsert","email","FormatDate","Date","Object","keys","length","InsertCatalog","status","title","open","onClose","error","onSubmit","container","spacing","xs","md","name","defaultValue","options","size","bug","fullWidth","sx","pt","variant","type","TitleButton","Guardar","onClick","Cancelar","InputText","others","render","field","InputLabelProps","className","ParamDelete","Message","TituloEliminar","text","TextoEliminar","icon","buttons","dangerMode","confirm","cancel","ParamCloseCase","TituloCerrarCaso","TextoCerrarCaso","ParamLoadingData","TituloCargar","TextoCargar","SlideTransition","props","direction","Alert","React","forwardRef","ref","elevation","MessageSuccess","TransitionComponent","anchorOrigin","vertical","horizontal","autoHideDuration","severity","width","MessageUpdate","Actualizar","MessageDelete","Eliminar","MessageError","InputSelect","isError","prototype","hasOwnProperty","call","message","htmlFor","labelId","option","GetAllCatalog","page","pageSize","getData","Url","Catalogo","GetByIdCatalog","CatalogoId","catalogo","postData","UpdateCatalogs","putData","DeleteCatalog","deleteData","GetAllByTipoCatalogo","GetAllBySubTipoCatalogo","substring","setCustomValidity","fieldPath","get","reportValidity","validateFieldsNatively","fields","refs","forEach","toNestError","shouldUseNativeValidation","fieldErrors","path","set","assign","schema","schemaOptions","resolverOptions","values","context","mode","abortEarly","e","inner","validateAllFieldCriteria","criteriaMode","reduce","previous","types","messages","appendErrors","concat","getMenuItemUtilityClass","slot","generateUtilityClass","menuItemClasses","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","up","body2","fontSize","MenuItem","inProps","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","Provider","children","clsx","TipoCatalogo","GetByIdTypeCatalog","TipoCatalogoId","InsertTypeCatalog","tipoCatalogo","UpdateTypeCatalogs","DeleteTypeCatalog"],"mappings":"uIAAO,SAASA,EAAYC,EAAQC,EAAQC,EAAgBC,EACxDC,EAAeC,EAAiBC,GAChC,MAAO,CAAEN,SAAQC,SAAQC,iBAAgBC,kBAAiBC,gBAAeC,kBAAiBC,iBAGvF,SAASC,EAAWC,EAAYR,EAAQC,EAAQC,EAAgBC,EACnEC,EAAeC,EAAiBC,GAChC,MAAO,CAAEE,aAAYR,SAAQC,SAAQC,iBAAgBC,kBAAiBC,gBAAeC,kBAAiBC,iBAP1G,qE,4QCyBMG,EAAmBC,MAAaC,MAAM,CACxCX,OAAQU,MAAaE,SAAb,UAAyBC,IAAkBC,YACnDb,OAAQS,MAAaE,SAAb,UAAyBC,IAAkBC,YACnDZ,eAAgBQ,MAAaE,SAAb,UAAyBC,IAAkBC,cA6HhDC,UA1HC,WACZ,IAAQC,EAASC,cAATD,KACFE,EAAWC,cACXC,EAAQC,cACRC,EAAYC,YAAcH,EAAMI,YAAYC,KAAK,OAEvD,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAUC,YAAQ,CACpBC,SAAUC,YAAY7B,KAGlB8B,EAAgCJ,EAAhCI,aAAcC,EAAkBL,EAAlBK,OAAQC,EAAUN,EAAVM,MAE9BC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,+EAE+BC,YAAkB,EAAG,GAFpD,OAEcC,EAFd,OAGYC,EAASD,EAASE,KAAKC,SAASC,KAAI,SAACC,GAAD,MAAW,CAC/CC,MAAOD,EAAKE,GACZC,MAAOH,EAAKlD,WAEhB4B,EAAekB,GAPvB,gDASQQ,QAAQC,IAAR,MATR,0DADY,uBAAC,WAAD,wBAcZC,KACD,IAEH,IAAMC,EAAW,uCAAG,WAAOC,GAAP,eAAAf,EAAA,kEAENgB,EAAe5D,YAAY2D,EAAM1D,OAAQ0D,EAAMzD,OAAQyD,EAAMxD,eAAgBc,EAAK4C,MACpFC,YAAW,IAAIC,MAAS,GAAID,YAAW,IAAIC,QAE3CC,OAAOC,KAAsB,IAAjBN,EAAMO,QALV,gCAMaC,YAAcP,GAN3B,OAOc,MAPd,OAOGQ,SACPrC,GAAe,GACfW,KATI,uDAaZT,GAAa,GACbE,EAAgB,4BAdJ,yDAAH,sDAkBjB,OACI,eAAC,IAAD,CAAUkC,MAAM,wBAAhB,UACI,cAAC,IAAD,CAAgBC,KAAMxC,EAAayC,QAAS,kBAAMxC,GAAe,MACjE,cAAC,IAAD,CAAcyC,MAAOtC,EAAcoC,KAAMtC,EAAWuC,QAAS,kBAAMtC,GAAa,MAEhF,uBAAMwC,SAAUjC,EAAakB,GAA7B,UACI,eAAC,IAAD,CAAMgB,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMxB,MAAI,EAACyB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,2BAAkBzC,GAAlB,aACI,cAAC,IAAD,CACI0C,KAAK,iBACLxB,MAAM,gBACNyB,aAAa,GACbC,QAASpD,EACTqD,KAAM1D,EAAY,QAAU,SAC5B2D,IAAKzC,SAKjB,cAAC,IAAD,CAAMU,MAAI,EAACyB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,IAAD,2BAAkBzC,GAAlB,aACI,cAAC,IAAD,CACI2C,aAAa,GACbI,WAAS,EACTL,KAAK,SACLxB,MAAM,YACN2B,KAAM1D,EAAY,QAAU,SAC5B2D,IAAKzC,SAKjB,cAAC,IAAD,CAAMU,MAAI,EAACyB,GAAI,GAAf,SACI,cAAC,IAAD,2BAAkBxC,GAAlB,aACI,cAAC,IAAD,CACI2C,aAAa,GACbI,WAAS,EACTL,KAAK,SACLxB,MAAM,SACN2B,KAAM1D,EAAY,QAAU,SAC5B2D,IAAKzC,YAMrB,cAAC,IAAD,CAAMU,MAAI,EAACyB,GAAI,GAAIQ,GAAI,CAAEC,GAAI,GAA7B,SACI,eAAC,IAAD,CAAMX,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMxB,MAAI,EAACyB,GAAI,EAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQU,QAAQ,YAAYH,WAAS,EAACI,KAAK,SAA3C,SACKC,IAAYC,cAIzB,cAAC,IAAD,CAAMtC,MAAI,EAACyB,GAAI,EAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQU,QAAQ,WAAWH,WAAS,EAACO,QAAS,kBAAMvE,EAAS,kBAA7D,SACKqE,IAAYG,4B,qKCvGlCC,IA/BG,SAAC,GAAqF,IAAnFV,EAAkF,EAAlFA,IAAKH,EAA6E,EAA7EA,aAAczB,EAA+D,EAA/DA,MAAO2B,EAAwD,EAAxDA,KAAwBH,GAAgC,EAAlDK,UAAkD,EAAhCL,MAAMjE,EAA0B,EAA1BA,SAAagF,EAAa,iBAEnG,OACI,qCACI,cAAC,IAAD,CACIf,KAAMA,EACNC,aAAcA,EACde,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,IAAD,2BACQA,GADR,IAEIzC,MAAOA,EACP2B,KAAMA,EACNe,gBAAiB,CACbC,UAAWpF,EAAW,iBAAmB,GACzCA,SAAUA,IAAY,GAE1B2D,QAAOU,EACPC,WAAS,GACLU,OAIfX,GACG,cAAC,IAAD,CAAM/B,MAAI,EAACyB,GAAI,GAAf,SACI,cAAC,IAAD,CAAgBJ,OAAK,EAArB,SAAuBU,W,qVC1B9BgB,EAAc,CACvB7B,MAAM,GAAD,OAAK8B,IAAQC,gBAClBC,KAAK,GAAD,OAAKF,IAAQG,eACjBC,KAAM,QACNC,QAAS,CAAC,WAAY,MACtBC,YAAY,EACZC,QAAS,CACLL,KAAM,MAEVM,OAAQ,CACJN,KAAM,aAIDO,EAAiB,CAC1BvC,MAAM,GAAD,OAAK8B,IAAQU,kBAClBR,KAAK,GAAD,OAAKF,IAAQW,iBACjBP,KAAM,UACNC,QAAS,CAAC,WAAY,MACtBC,YAAY,EACZC,QAAS,CACLL,KAAM,MAEVM,OAAQ,CACJN,KAAM,aAIDU,EAAmB,CAC5B1C,MAAM,GAAD,OAAK8B,IAAQa,cAClBX,KAAK,GAAD,OAAKF,IAAQc,aACjBV,KAAM,UACNC,QAAS,CAAC,WAAY,MACtBC,YAAY,EACZC,QAAS,CACLL,KAAM,MAEVM,OAAQ,CACJN,KAAM,aAId,SAASa,EAAgBC,GACrB,OAAO,cAAC,IAAD,2BAAWA,GAAX,IAAkBC,UAAU,QAGvC,IAAMC,EAAQC,IAAMC,YAChB,SAAeJ,EAAOK,GAClB,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKlC,QAAQ,UAAa6B,OAIzDO,EAAiB,SAAC,GAAuB,IAArBpD,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACnC,OACI,cAAC,IAAD,CACIoD,oBAAqBT,EAErBU,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDxD,KAAMA,EACNyD,iBAAkB,KAClBxD,QAASA,EANb,SAQI,cAAC8C,EAAD,CAAOW,SAAS,UAAU5C,GAAI,CAAE6C,MAAO,QAAvC,SACK9B,IAAQV,WAPR,UAaJyC,EAAgB,SAAC,GAAuB,IAArB5D,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClC,OACI,cAAC,IAAD,CACIoD,oBAAqBT,EAErBU,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDxD,KAAMA,EACNyD,iBAAkB,KAClBxD,QAASA,EANb,SAQI,cAAC8C,EAAD,CAAOW,SAAS,UAAU5C,GAAI,CAAE6C,MAAO,QAAvC,SACK9B,IAAQgC,cAPR,UAaJC,EAAgB,SAAC,GAAuB,IAArB9D,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClC,OACI,cAAC,IAAD,CACIoD,oBAAqBT,EAErBU,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDxD,KAAMA,EACNyD,iBAAkB,KAClBxD,QAASA,EANb,SAQI,cAAC8C,EAAD,CAAOW,SAAS,QAAQ5C,GAAI,CAAE6C,MAAO,QAArC,SACK9B,IAAQkC,YAPR,UAaJC,EAAe,SAAC,GAA8B,IAA5BhE,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC1C,OACI,cAAC,IAAD,CACImD,oBAAqBT,EAErBU,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDxD,KAAMA,EACNyD,iBAAkB,IAClBxD,QAASA,EANb,SAQI,cAAC8C,EAAD,CAAOW,SAAS,QAAQ5C,GAAI,CAAE6C,MAAO,QAArC,SACKzD,KAPA,W,mLCxDF+D,IA9CK,SAAC,GAAkE,IAAhErD,EAA+D,EAA/DA,IAAKF,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,KAAMF,EAA2C,EAA3CA,aAAczB,EAA6B,EAA7BA,MAAOwB,EAAsB,EAAtBA,KAASe,EAAa,iBAC9E2C,GAAU,EACVtG,EAAe,GAMnB,OALIgD,GAAOlB,OAAOyE,UAAUC,eAAeC,KAAKzD,EAAKJ,KACjD0D,GAAU,EACVtG,EAAegD,EAAIJ,GAAM8D,SAIzB,qCACI,cAAC,IAAD,CACI9D,KAAMA,EACNC,aAAcA,EACde,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,eAAC,IAAD,CAAaZ,WAAS,EAACX,MAAOgE,EAA9B,UACI,cAAC,IAAD,CAAYK,QAAQ,WAAWxF,GAAG,2BAAlC,SACKC,IAEL,cAAC,IAAD,uCACQyC,GADR,IAEI+C,QAAQ,2BACRzF,GAAG,qBACHC,MAAOA,GACHuC,GALR,IAMIV,WAAS,EACTF,KAAMA,EAPV,SASKD,EAAQ9B,KAAI,SAAC6F,GAAD,OACT,cAAC,IAAD,CAA6B3F,MAAO2F,EAAO3F,MAA3C,SACK2F,EAAOzF,OADGyF,EAAO3F,mBAQzClB,GACG,cAAC,IAAD,CAAMiB,MAAI,EAACyB,GAAI,GAAf,SACI,cAAC,IAAD,CAAgBJ,OAAK,EAArB,SAAuBtC,W,8TC9C9B8G,EAAa,uCAAG,WAAOC,EAAMC,GAAb,SAAAtG,EAAA,sEAAgCuG,YAAQC,IAAIC,SAAU,CAAEJ,OAAMC,aAA9D,mFAAH,wDACbI,EAAc,uCAAG,WAAOjG,GAAP,SAAAT,EAAA,sEAAoBuG,YAAQC,IAAIG,WAAY,CAAElG,OAA9C,mFAAH,sDACdc,EAAa,uCAAG,WAAOqF,GAAP,SAAA5G,EAAA,sEAA0B6G,YAASL,IAAIC,SAAUG,GAAjD,mFAAH,sDACbE,EAAc,uCAAG,WAAOF,GAAP,SAAA5G,EAAA,sEAA0B+G,YAAQP,IAAIC,SAAUG,GAAhD,mFAAH,sDACdI,EAAa,uCAAG,WAAOnJ,GAAP,SAAAmC,EAAA,sEAA4BiH,YAAWT,IAAIC,SAAU,CAAE5I,eAAvD,mFAAH,sDACbqJ,EAAoB,uCAAG,WAAOb,EAAMC,EAAU/I,GAAvB,SAAAyC,EAAA,sEAAgDuG,YAAQC,IAAIU,qBAAsB,CAAEb,OAAMC,WAAU/I,mBAApG,mFAAH,0DACpB4J,EAAuB,uCAAG,WAAOd,EAAMC,EAAUhJ,EAAQ8J,GAA/B,SAAApH,EAAA,sEAAmDuG,YAAQC,IAAIW,wBAAyB,CAAEd,OAAMC,WAAUhJ,SAAQ8J,cAAlH,mFAAH,6D,gFCL9BC,EAAoB,SAACzC,EAAU0C,EAAmBzH,GACtD,GAAI+E,GAAO,mBAAoBA,EAAK,CAClC,IAAMhD,EAAQ2F,YAAI1H,EAAQyH,GAC1B1C,EAAIyC,kBAAmBzF,GAASA,EAAMoE,SAAY,IAElDpB,EAAI4C,mBAKKC,EAAyB,SACpC5H,EACAuC,kBAIWkF,GACT,IAAMnE,EAAQf,EAAQsF,OAAOJ,GACzBnE,GAASA,EAAMyB,KAAO,mBAAoBzB,EAAMyB,IAClDyC,EAAkBlE,EAAMyB,IAAK0C,EAAWzH,GAC/BsD,EAAMwE,MACfxE,EAAMwE,KAAKC,SAAQ,SAAChD,UAA0ByC,EAAkBzC,EAAK0C,EAAWzH,OALpF,IAAK,IAAMyH,KAAalF,EAAQsF,SAArBJ,ICVAO,EAAc,SACzBhI,EACAuC,GAEAA,EAAQ0F,2BAA6BL,EAAuB5H,EAAQuC,GAEpE,IAAM2F,EAAc,GACpB,IAAK,IAAMC,KAAQnI,EAAQ,CACzB,IAAMsD,EAAQoE,YAAInF,EAAQsF,OAAQM,GAElCC,YACEF,EACAC,EACA5G,OAAO8G,OAAOrI,EAAOmI,GAAO,CAAEpD,IAAKzB,GAASA,EAAMyB,OAItD,OAAOmD,GCaIpI,EACX,SAACwI,EAAQC,EAAoBC,mBAApBD,MAAgB,aAAIC,MAAkB,aACxCC,EAAQC,EAASnG,uDAEhBgG,EAAcG,QAGd,gBAIiBJ,EACM,SAAzBE,EAAgBG,KAAkB,eAAiB,YAEnDF,EACAlH,OAAO8G,OAAO,CAAEO,eAAqBL,EAAe,CAAEG,6BAJlDpI,GASN,OAFAiC,EAAQ0F,2BAA6BL,EAAuB,GAAIrF,GAEzD,CACLkG,OAAQnI,EACRN,OAAQ,iEApBUuC,CAoBV,YAEHsG,GACP,IAAKA,EAAEC,MACL,MAAMD,EAGR,MAAO,CACLJ,OAAQ,GACRzI,OAAQgI,GA7DdjG,EA+DU8G,EA9DVE,GA+DWxG,EAAQ0F,2BACkB,QAAzB1F,EAAQyG,cA9DZjH,EAAM+G,OAAS,IAAIG,QACzB,SAACC,EAAUnH,GAKT,GAJKmH,EAASnH,EAAMoG,QAClBe,EAASnH,EAAMoG,MAAS,CAAEhC,QAASpE,EAAMoE,QAASrD,KAAMf,EAAMe,OAG5DiG,EAA0B,CAC5B,IAAMI,EAAQD,EAASnH,EAAMoG,MAAOgB,MAC9BC,EAAWD,GAASA,EAAMpH,EAAMe,MAEtCoG,EAASnH,EAAMoG,MAASkB,YACtBtH,EAAMoG,KACNY,EACAG,EACAnH,EAAMe,KACNsG,EACK,GAAgBE,OAAOF,EAAsBrH,EAAMoE,SACpDpE,EAAMoE,SAId,OAAO+C,IAET,KAyCM3G,IApEe,IACvBR,EACAgH,MA8BA,sC,oLCxCK,SAASQ,EAAwBC,GACtC,OAAOC,YAAqB,cAAeD,GAE7C,IACeE,EADSC,YAAuB,cAAe,CAAC,OAAQ,eAAgB,QAAS,WAAY,UAAW,UAAW,a,OCF5HC,EAAY,CAAC,YAAa,YAAa,QAAS,UAAW,iBAAkB,wBAAyB,OAAQ,YAwC9GC,EAAeC,YAAOC,IAAY,CACtCC,kBAAmB,SAAAC,GAAI,OAAIC,YAAsBD,IAAkB,YAATA,GAC1D5H,KAAM,cACNmH,KAAM,OACNW,kBA3B+B,SAACzF,EAAO0F,GACvC,IACEC,EACE3F,EADF2F,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWE,OAASH,EAAOG,MAAOF,EAAWG,SAAWJ,EAAOI,SAAUH,EAAWI,gBAAkBL,EAAOM,WAmB/GZ,EAKlB,kBACDlL,EADC,EACDA,MACAyL,EAFC,EAEDA,WAFC,OAGGM,YAAS,GAAI/L,EAAMgM,WAAWC,MAAO,CACzCC,QAAS,OACTC,eAAgB,aAChBC,WAAY,SACZC,SAAU,WACVC,eAAgB,OAChBC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,WAAY,WACVlB,EAAWI,gBAAkB,CAC/Be,YAAa,GACbC,aAAc,IACbpB,EAAWG,SAAW,CACvBkB,aAAc,aAAF,QAAgB9M,EAAM+M,MAAQ/M,GAAOgN,QAAQpB,SACzDqB,eAAgB,gBAhBJ,GAkBZ,UAAW,CACTX,eAAgB,OAChBY,iBAAkBlN,EAAM+M,MAAQ/M,GAAOgN,QAAQG,OAAOC,MAEtD,uBAAwB,CACtBF,gBAAiB,iBAvBT,0BA0BNpC,EAAgBuC,UA1BV,aA2BVH,gBAAiBlN,EAAM+M,KAAN,eAAqB/M,EAAM+M,KAAKC,QAAQM,QAAQC,YAAhD,cAAiEvN,EAAM+M,KAAKC,QAAQG,OAAOK,gBAA3F,KAAgHC,YAAMzN,EAAMgN,QAAQM,QAAQI,KAAM1N,EAAMgN,QAAQG,OAAOK,kBA3B9K,YA4BJ1C,EAAgB6C,cAAiB,CACrCT,gBAAiBlN,EAAM+M,KAAN,eAAqB/M,EAAM+M,KAAKC,QAAQM,QAAQC,YAAhD,mBAAsEvN,EAAM+M,KAAKC,QAAQG,OAAOK,gBAAhG,cAAqHxN,EAAM+M,KAAKC,QAAQG,OAAOS,aAA/I,MAAkKH,YAAMzN,EAAMgN,QAAQM,QAAQI,KAAM1N,EAAMgN,QAAQG,OAAOK,gBAAkBxN,EAAMgN,QAAQG,OAAOS,iBA7BzQ,0BAgCN9C,EAAgBuC,SAhCV,UAgC6B,CACvCH,gBAAiBlN,EAAM+M,KAAN,eAAqB/M,EAAM+M,KAAKC,QAAQM,QAAQC,YAAhD,mBAAsEvN,EAAM+M,KAAKC,QAAQG,OAAOK,gBAAhG,cAAqHxN,EAAM+M,KAAKC,QAAQG,OAAOU,aAA/I,MAAkKJ,YAAMzN,EAAMgN,QAAQM,QAAQI,KAAM1N,EAAMgN,QAAQG,OAAOK,gBAAkBxN,EAAMgN,QAAQG,OAAOU,cAEjR,uBAAwB,CACtBX,gBAAiBlN,EAAM+M,KAAN,eAAqB/M,EAAM+M,KAAKC,QAAQM,QAAQC,YAAhD,cAAiEvN,EAAM+M,KAAKC,QAAQG,OAAOK,gBAA3F,KAAgHC,YAAMzN,EAAMgN,QAAQM,QAAQI,KAAM1N,EAAMgN,QAAQG,OAAOK,oBApChL,0BAuCN1C,EAAgB6C,cAAiB,CACrCT,iBAAkBlN,EAAM+M,MAAQ/M,GAAOgN,QAAQG,OAAOW,QAxC5C,0BA0CNhD,EAAgBiD,UAAa,CACjCC,SAAUhO,EAAM+M,MAAQ/M,GAAOgN,QAAQG,OAAOc,kBA3CpC,6BA6CHC,IAAexC,MAAS,CAC/ByC,UAAWnO,EAAMsD,QAAQ,GACzB8K,aAAcpO,EAAMsD,QAAQ,KA/ClB,6BAiDH4K,IAAeG,OAAU,CAChCC,WAAY,KAlDF,2BAoDLC,IAAoB7C,MAAS,CAClCyC,UAAW,EACXC,aAAc,IAtDJ,2BAwDLG,IAAoBF,OAAU,CACnCzB,YAAa,KAzDH,2BA2DL4B,IAAoB9C,MAAS,CAClC+C,SAAU,KA5DA,IA8DVhD,EAAWE,OAAZ,eACA3L,EAAMI,YAAYsO,GAAG,MAAQ,CAC5BnC,UAAW,SAEZd,EAAWE,OAASI,YAAS,CAC9BQ,UAAW,GAEXC,WAAY,EACZC,cAAe,GACdzM,EAAMgM,WAAW2C,MALW,4BAMtBH,IAAoB9C,KANE,QAMW,CACtCkD,SAAU,iBAGRC,EAAwB5I,cAAiB,SAAkB6I,EAAS3I,GACxE,IAAML,EAAQiJ,YAAc,CAC1BjJ,MAAOgJ,EACPrL,KAAM,gBAGR,EASIqC,EARFkJ,iBADF,WASIlJ,EAPFmJ,iBAFF,MAEc,KAFd,IASInJ,EANF6F,aAHF,WASI7F,EALF8F,eAJF,WASI9F,EAJF+F,sBALF,SAMEqD,EAGEpJ,EAHFoJ,sBANF,EASIpJ,EAFFqJ,YAPF,MAOS,WAPT,EAQYC,EACRtJ,EADFuJ,SAEIC,EAAQC,YAA8BzJ,EAAOkF,GAE7ClB,EAAU7D,aAAiBuJ,KAC3BC,EAAe,CACnB9D,MAAOA,GAAS7B,EAAQ6B,QAAS,EACjCE,kBAEI6D,EAAczJ,SAAa,MACjC0J,aAAkB,WACZX,GACEU,EAAYE,SACdF,EAAYE,QAAQ9B,UAKvB,CAACkB,IAEJ,IAQIK,EARE5D,EAAaM,YAAS,GAAIjG,EAAO,CACrC6F,MAAO8D,EAAa9D,MACpBC,UACAC,mBAGIgE,EA5IkB,SAAApE,GACxB,IACEsC,EAMEtC,EANFsC,SACApC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,QACAC,EAGEJ,EAHFI,eACAwB,EAEE5B,EAFF4B,SACAwC,EACEpE,EADFoE,QAEIC,EAAQ,CACZpE,KAAM,CAAC,OAAQC,GAAS,QAASoC,GAAY,YAAalC,GAAkB,UAAWD,GAAW,UAAWyB,GAAY,aAErH0C,EAAkBC,YAAeF,EAAOnF,EAAyBkF,GACvE,OAAO9D,YAAS,GAAI8D,EAASE,GA+HbE,CAAkBnK,GAC5BoK,EAAYC,YAAWT,EAAavJ,GAO1C,OAJKL,EAAMiI,WACTsB,OAA4Be,IAAjBhB,EAA6BA,GAAgB,GAGtCiB,cAAKb,IAAYc,SAAU,CAC7CvO,MAAO0N,EACPc,SAAuBF,cAAKpF,EAAcc,YAAS,CACjD5F,IAAK+J,EACLf,KAAMA,EACNE,SAAUA,EACVJ,UAAWA,EACXC,sBAAuBsB,YAAKX,EAAQlC,aAAcuB,IACjDI,EAAO,CACR7D,WAAYA,EACZoE,QAASA,UA2FAhB,O,0PChRFrN,EAAiB,uCAAG,WAAOoG,EAAMC,GAAb,SAAAtG,EAAA,sEAAgCuG,YAAQC,IAAI0I,aAAc,CAAE7I,OAAMC,aAAlE,mFAAH,wDACjB6I,EAAkB,uCAAG,WAAO1O,GAAP,SAAAT,EAAA,sEAAoBuG,YAAQC,IAAI4I,eAAgB,CAAE3O,OAAlD,mFAAH,sDAClB4O,EAAiB,uCAAG,WAAOC,GAAP,SAAAtP,EAAA,sEAA8B6G,YAASL,IAAI0I,aAAcI,GAAzD,mFAAH,sDACjBC,EAAkB,uCAAG,WAAOD,GAAP,SAAAtP,EAAA,sEAA8B+G,YAAQP,IAAI0I,aAAcI,GAAxD,mFAAH,sDAClBE,EAAiB,uCAAG,WAAOjS,GAAP,SAAAyC,EAAA,sEAAgCiH,YAAWT,IAAI0I,aAAc,CAAE3R,mBAA/D,mFAAH","file":"static/js/136.feb7c8db.chunk.js","sourcesContent":["export function PostCatalog(nombre, codigo, idTipoCatalogo, usuarioRegistro,\r\n    fechaRegistro, usuarioModifico, fechaModifico) {\r\n    return { nombre, codigo, idTipoCatalogo, usuarioRegistro, fechaRegistro, usuarioModifico, fechaModifico };\r\n}\r\n\r\nexport function PutCatalog(idCatalogo, nombre, codigo, idTipoCatalogo, usuarioRegistro,\r\n    fechaRegistro, usuarioModifico, fechaModifico) {\r\n    return { idCatalogo, nombre, codigo, idTipoCatalogo, usuarioRegistro, fechaRegistro, usuarioModifico, fechaModifico };\r\n}","import { useState, useEffect } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Button,\r\n    Grid,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { FormatDate } from 'components/helpers/Format';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { MessageSuccess, MessageError } from 'components/alert/AlertAll';\r\nimport { InsertCatalog } from 'api/clients/CatalogClient';\r\nimport { GetAllTypeCatalog } from 'api/clients/TypeCatalogClient';\r\nimport { PostCatalog } from 'formatdata/CatalogForm';\r\nimport InputText from 'components/input/InputText';\r\nimport InputSelect from 'components/input/InputSelect';\r\nimport { TitleButton, ValidationMessage } from 'components/helpers/Enums';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    nombre: yup.string().required(`${ValidationMessage.Requerido}`),\r\n    codigo: yup.string().required(`${ValidationMessage.Requerido}`),\r\n    idTipoCatalogo: yup.string().required(`${ValidationMessage.Requerido}`),\r\n});\r\n\r\nconst Catalog = () => {\r\n    const { user } = useAuth();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [typeCatalog, setTypeCatalog] = useState([]);\r\n    const [openSuccess, setOpenSuccess] = useState(false);\r\n    const [openError, setOpenError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    const { handleSubmit, errors, reset } = methods;\r\n\r\n    useEffect(() => {\r\n        async function GetAll() {\r\n            try {\r\n                const lsServer = await GetAllTypeCatalog(0, 0);\r\n                var result = lsServer.data.entities.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.nombre\r\n                }));\r\n                setTypeCatalog(result);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        GetAll();\r\n    }, [])\r\n\r\n    const handleClick = async (datos) => {\r\n        try {\r\n            const DataToInsert = PostCatalog(datos.nombre, datos.codigo, datos.idTipoCatalogo, user.email,\r\n                FormatDate(new Date()), '', FormatDate(new Date()));\r\n\r\n            if (Object.keys(datos.length !== 0)) {\r\n                const result = await InsertCatalog(DataToInsert);\r\n                if (result.status === 200) {\r\n                    setOpenSuccess(true);\r\n                    reset();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            setOpenError(true);\r\n            setErrorMessage('Este código ya existe');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Registrar Catálogo\">\r\n            <MessageSuccess open={openSuccess} onClose={() => setOpenSuccess(false)} />\r\n            <MessageError error={errorMessage} open={openError} onClose={() => setOpenError(false)} />\r\n\r\n            <form onSubmit={handleSubmit(handleClick)}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormProvider {...methods}>\r\n                            <InputSelect\r\n                                name=\"idTipoCatalogo\"\r\n                                label=\"Tipo Catalogo\"\r\n                                defaultValue=\"\"\r\n                                options={typeCatalog}\r\n                                size={matchesXS ? 'small' : 'medium'}\r\n                                bug={errors}\r\n                            />\r\n                        </FormProvider>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormProvider {...methods}>\r\n                            <InputText\r\n                                defaultValue=\"\"\r\n                                fullWidth\r\n                                name=\"codigo\"\r\n                                label=\"Código\"\r\n                                size={matchesXS ? 'small' : 'medium'}\r\n                                bug={errors}\r\n                            />\r\n                        </FormProvider>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <FormProvider {...methods}>\r\n                            <InputText\r\n                                defaultValue=\"\"\r\n                                fullWidth\r\n                                name=\"nombre\"\r\n                                label=\"Nombre\"\r\n                                size={matchesXS ? 'small' : 'medium'}\r\n                                bug={errors}\r\n                            />\r\n                        </FormProvider>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sx={{ pt: 4 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" fullWidth type=\"submit\">\r\n                                    {TitleButton.Guardar}\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <AnimateButton>\r\n                                <Button variant=\"outlined\" fullWidth onClick={() => navigate(\"/catalog/list\")}>\r\n                                    {TitleButton.Cancelar}\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Catalog;","import PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport {\r\n    FormHelperText,\r\n    Grid,\r\n    TextField,\r\n} from '@mui/material';\r\n\r\nconst InputText = ({ bug, defaultValue, label, size, fullWidth = true, name, required, ...others }) => {\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                render={({ field }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        label={label}\r\n                        size={size}\r\n                        InputLabelProps={{\r\n                            className: required ? 'required-label' : '',\r\n                            required: required || false\r\n                        }}\r\n                        error={bug ? true : false}\r\n                        fullWidth\r\n                        {...others}\r\n                    />\r\n                )}\r\n            />\r\n            {bug && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{bug}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputText;\r\n\r\nInputText.propTypes = {\r\n    bug: PropTypes.object,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    name: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    fullWidth: PropTypes.bool\r\n};","import React from 'react';\r\nimport Slide from '@mui/material/Slide';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { Message } from 'components/helpers/Enums';\r\nimport { Snackbar } from '@mui/material';\r\n\r\nexport const ParamDelete = {\r\n    title: `${Message.TituloEliminar}`,\r\n    text: `${Message.TextoEliminar}`,\r\n    icon: \"error\",\r\n    buttons: [\"Cancelar\", \"Si\"],\r\n    dangerMode: true,\r\n    confirm: {\r\n        text: \"Si\",\r\n    },\r\n    cancel: {\r\n        text: \"Cancelar\",\r\n    },\r\n}\r\n\r\nexport const ParamCloseCase = {\r\n    title: `${Message.TituloCerrarCaso}`,\r\n    text: `${Message.TextoCerrarCaso}`,\r\n    icon: \"warning\",\r\n    buttons: [\"Cancelar\", \"Si\"],\r\n    dangerMode: true,\r\n    confirm: {\r\n        text: \"Si\",\r\n    },\r\n    cancel: {\r\n        text: \"Cancelar\",\r\n    },\r\n}\r\n\r\nexport const ParamLoadingData = {\r\n    title: `${Message.TituloCargar}`,\r\n    text: `${Message.TextoCargar}`,\r\n    icon: \"warning\",\r\n    buttons: [\"Cancelar\", \"Si\"],\r\n    dangerMode: true,\r\n    confirm: {\r\n        text: \"Si\",\r\n    },\r\n    cancel: {\r\n        text: \"Cancelar\",\r\n    },\r\n}\r\n\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Alert = React.forwardRef(\r\n    function Alert(props, ref) {\r\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n    }\r\n);\r\n\r\nexport const MessageSuccess = ({ open, onClose }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2500}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n                {Message.Guardar}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport const MessageUpdate = ({ open, onClose }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2500}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n                {Message.Actualizar}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport const MessageDelete = ({ open, onClose }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2500}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"error\" sx={{ width: '100%' }}>\r\n                {Message.Eliminar}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport const MessageError = ({ open, onClose, error }) => {\r\n    return (\r\n        <Snackbar\r\n            TransitionComponent={SlideTransition}\r\n            key={'alert'}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n            open={open}\r\n            autoHideDuration={2000}\r\n            onClose={onClose}\r\n        >\r\n            <Alert severity=\"error\" sx={{ width: '100%' }}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport {\r\n    FormHelperText,\r\n    Grid,\r\n    FormControl,\r\n    MenuItem,\r\n    InputLabel,\r\n    Select,\r\n} from '@mui/material';\r\n\r\nconst InputSelect = ({ bug, options, size, defaultValue, label, name, ...others }) => {\r\n    let isError = false;\r\n    let errorMessage = '';\r\n    if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\r\n        isError = true;\r\n        errorMessage = bug[name].message;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                render={({ field }) => (\r\n                    <FormControl fullWidth error={isError}>\r\n                        <InputLabel htmlFor=\"my-input\" id=\"demo-simple-select-label\" /* sx={{ fontSize: 14 }} */>\r\n                            {label}\r\n                        </InputLabel>\r\n                        <Select\r\n                            {...field}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            label={label}\r\n                            {...others}\r\n                            fullWidth\r\n                            size={size}\r\n                        >\r\n                            {options.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                )}\r\n            />\r\n            {errorMessage && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{errorMessage}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputSelect;\r\n\r\nInputSelect.propTypes = {\r\n    bug: PropTypes.object,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    name: PropTypes.string,\r\n    options: PropTypes.any,\r\n};","import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllCatalog = async (page, pageSize) => await getData(Url.Catalogo, { page, pageSize });\r\nexport const GetByIdCatalog = async (id) => await getData(Url.CatalogoId, { id });\r\nexport const InsertCatalog = async (catalogo) => await postData(Url.Catalogo, catalogo);\r\nexport const UpdateCatalogs = async (catalogo) => await putData(Url.Catalogo, catalogo);\r\nexport const DeleteCatalog = async (idCatalogo) => await deleteData(Url.Catalogo, { idCatalogo });\r\nexport const GetAllByTipoCatalogo = async (page, pageSize, idTipoCatalogo) => await getData(Url.GetAllByTipoCatalogo, { page, pageSize, idTipoCatalogo });\r\nexport const GetAllBySubTipoCatalogo = async (page, pageSize, codigo, substring) => await getData(Url.GetAllBySubTipoCatalogo, { page, pageSize, codigo, substring });","import {\n  get, FieldError, ResolverOptions, Ref\n} from 'react-hook-form';\n\nconst setCustomValidity = (ref: Ref, fieldPath: string, errors: Record<string, FieldError>) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues>(\n  errors: Record<string, FieldError>,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n\n\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors)\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) => setCustomValidity(ref, fieldPath, errors))\n    }\n  }\n};\n","import {\n  set,\n  get,\n  FieldError,\n  FieldErrors,\n  Field,\n  ResolverOptions,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestError = <TFieldValues>(\n  errors: Record<string, FieldError>,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n\n    set(\n      fieldErrors,\n      path,\n      Object.assign(errors[path], { ref: field && field.ref }),\n    );\n  }\n\n  return fieldErrors;\n};\n","import Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport const yupResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllTypeCatalog = async (page, pageSize) => await getData(Url.TipoCatalogo, { page, pageSize });\r\nexport const GetByIdTypeCatalog = async (id) => await getData(Url.TipoCatalogoId, { id });\r\nexport const InsertTypeCatalog = async (tipoCatalogo) => await postData(Url.TipoCatalogo, tipoCatalogo);\r\nexport const UpdateTypeCatalogs = async (tipoCatalogo) => await putData(Url.TipoCatalogo, tipoCatalogo);\r\nexport const DeleteTypeCatalog = async (idTipoCatalogo) => await deleteData(Url.TipoCatalogo, { idTipoCatalogo });"],"sourceRoot":""}