{"version":3,"sources":["../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","name","overridesResolver","props","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","_extends","boxSizing","lineHeight","listStyle","vars","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","ListSubheader","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabledProp","disabled","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","readOnly","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","event","newValue","newInputValue","prevValue","valueChange","current","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","every","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","undefined","autoCapitalize","spellCheck","role","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","tag","inputRoot","clearIndicator","visibility","width","margin","maxWidth","flexWrap","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","sizeSmall","outlinedInputClasses","endAdornment","right","filledInputClasses","paddingTop","hiddenLabel","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","focusVisible","mainChannel","selectedOpacity","alpha","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","_componentsProps$pape","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","map","Chip","children","_jsxs","props2","renderListOption","optionProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/10.94f7a012.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\n\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea, _componentsProps$pape;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              ownerState: ownerState,\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, componentsProps.paper, {\n        className: clsx(classes.paper, (_componentsProps$pape = componentsProps.paper) == null ? void 0 : _componentsProps$pape.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}