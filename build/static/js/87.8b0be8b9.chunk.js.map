{"version":3,"sources":["api/clients/OccupationalMedicineClient.js","formatdata/OccupationalMedicineForm.js","modules/OccupationalMedicine/UpdateOccupationalMedicine.jsx","components/loading/Cargando.jsx","components/input/InputText.jsx","components/input/InputSelect.jsx","api/clients/CatalogClient.js","assets/img/user.png","api/clients/EmployeeClient.js","components/input/SelectOnChange.jsx","api/clients/CompanyClient.js","components/form/PhotoModel.jsx","components/accordion/Accordion.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","components/input/InputOnChange.jsx","api/clients/OthersClients.js","components/input/InputDatePick.jsx","../node_modules/@mui/icons-material/DomainTwoTone.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js"],"names":["GetAllOccupationalMedicine","page","pageSize","a","getData","Url","MedicinaLaboral","GetByIdOccupationalMedicine","id","MedicinaLaboralId","InsertOccupationalMedicine","medicinaLaboralX","postData","UpdateOccupationalMedicines","putData","DeleteOccupationalMedicine","idMedicinaLaboralX","deleteData","PostOccupationalMedicine","cedula","resumenCaso","fechaRetiro","segmentoAgrupado","segmentoAfectado","subsegmento","codDx","nroFurel","regionInfoLaboral","lateralidad","entidadQueMotivaEnvio","entidadDondeEnvia","fechaEntrega","fechaEnvio","investigado","observaciones","fechaCalificacionEps","origenEps","noSolicitudARL","fechaCalifiOrigenARL","origenARL","fechaCalificacionPclARL","pclARL","fechaEstructuraARL","fechaRecalificacionPclARL","pclRecalificadaARL","fechaEstructuraRecalificadaARL","fechaCalificaOrigenJRC","juntaCalifica","noDictamenJRC","origenJRC","controversia","conclusion","fechaCalificacionPclJRC","noDictamenPclJRC","pclJRC","fechaEstructuraPclJRC","noActaRecursoJRC","fechaRecalificacionPclJRC","noDictamenRecalificacionJRC","juntaReCalificacionJRC","pclRecalificadaJRC","fechaRecalificacionEstJRC","fechaCalificaOrigenJNC","noDictamenJNC","origenJNC","fechaCalificacionPclJNC","noDictamenPclJNC","pclJNC","fechaEstructuraJNC","fechaRecalificacionPclJNC","noDictamenRecalificacionJNC","pclRecalificacionJNC","origenInstaFinal","fechaEstructuracionOrigenInstaFinal","instanciaOrigenInstaFinal","pclFinalInstaFinal","instanciaFinal","fechaCalificacionPclInstFinal","fechaEstructuracionPclInstFinal","indemnizado","entregadoMin","fechaPagoInstaFinal","indemnizadoRecalificado","fechaPagoRecalificadoInstaFinal","estadoRHT","reintegro","reubicado","restringido","jornadaLaboral","indemnizacion","sede","usuario","usuarioReporte","fechaSistema","fechaInforme","fechaReporte","fechaSistemaReporte","edadCalificado","antiguedadCalificado","urlDocumento","PutOccupationalMedicine","ConvertToMedicinaLaboralToFormData","formData","FormData","append","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","UpdateOccupationalMedicine","dispatch","useDispatch","theme","useTheme","navigate","useNavigate","useParams","matchesXS","useMediaQuery","breakpoints","down","useState","lsOccupationalMedicine","setLsOccupationalMedicine","setFileUpload","catalog","setCatalog","company","setCompany","lsResumenCaso","setLsResumenCaso","lsRegion","setLsRegion","lsLateralidad","setLsLateralidad","lsEntidadMotiEnvio","setLsEntidadMotiEnvio","lsEntidadDondeEnvia","setLsEntidadDondeEnvia","lsInvestigado","setLsInvestigado","lsOrigenEPS","setLsOrigenEPS","lsOrigenARL","setLsOrigenARL","lsJuntaCalificadaJRC","setLsJuntaCalificadaJRC","lsInstanciaOrigen","setLsInstanciaOrigen","lsSegmentoAgrupado","setLsSegmentoAgrupado","setSegmentoAgrupado","lsSegmentoAfectado","setLsSegmentoAfectado","setSegmentoAfectado","lsSubsegmento","setLsSubsegmento","setSubsegmento","lsCie11","setLsCie11","imgSrc","setImgSrc","setValue","document","setDocument","nombres","setNombres","email","setEmail","celular","setCelular","escolaridad","setEscolaridad","empresa","setEmpresa","setSede","fechaNaci","setFechaNaci","genero","setGenero","estadoCivil","setEstadoCivil","contacto","setContacto","telefonoContacto","setTelefonoContacto","fechaContrato","setFechaContrato","tipoContrato","setTipoContrato","payStatus","setPayStatus","type","setType","rosterPosition","setRosterPosition","generalPosition","setGeneralPosition","departamento","setDepartamento","area","setArea","subArea","setSubArea","grupo","setGrupo","turno","setTurno","direccionResidencia","setDireccionResidencia","dptoResidencia","setDptoResidencia","municipioResidencia","setMunicipioResidencia","municipioNacido","setMunicipioNacido","dptoNacido","setDptoNacido","eps","setEps","afp","setAfp","Date","setFechaRetiro","setFechaEntrega","setFechaEnvio","setFechaCalificacionEps","setFechaCalifiOrigenARL","setFechaCalificacionPclARL","setFechaEstructuraARL","setFechaRecalificacionPclARL","setFechaEstructuraRecalificadaARL","setFechaCalificaOrigenJRC","setFechaCalificacionPclJRC","setFechaEstructuraPclJRC","setFechaRecalificacionPclJRC","setFechaRecalificacionEstJRC","setFechaCalificaOrigenJNC","setFechaCalificacionPclJNC","setFechaEstructuraJNC","setFechaRecalificacionPclJNC","setFechaEstructuracionOrigenInstaFinal","setFechaCalificacionPclInstFinal","setFechaEstructuracionPclInstFinal","setFechaPagoInstaFinal","setFechaPagoRecalificadoInstaFinal","isListening","setNote","methods","useForm","handleSubmit","errors","handleLoadingDocument","reset","idEmployee","GetByIdEmployee","lsQuestionnaire","status","data","imagenUrl","documento","SNACKBAR_OPEN","open","message","Message","ErrorDeDatos","variant","alertSeverity","close","transition","lsServerAll","GetAllBySegAgrupado","lsServerSegAfectado","resultSegAfectado","entities","map","item","value","label","descripcion","GetAllBySegAfectado","lsServerSubsegmento","resultSubsegmento","GetAllBySubsegmento","lsServerCie11","resultCie11","dx","GetAllCatalog","lsServerCatalog","resultCatalogo","idCatalogo","nombre","GetAllSegmentoAgrupado","lsServerSegAgrupado","resultSegAgrupado","GetAllByTipoCatalogo","CodCatalogo","MEDLAB_REGION","lsServerRegion","resultRegion","Departamento","lsServerJuntaCalificadaJRC","resultJuntaCalificadaJRC","Opciones_SINO","lsServerInvestigado","resultInvestigado","MEDLAB_ENDON_EN","lsServerEntidadDondeEnvia","resultEntidadDondeEnvia","MEDLAB_RECASO","lsServerResumenCaso","resultResumenCaso","MEDLAB_ORIGEN_EPS","lsServerOrigenEPS","resultOrigenEPS","MEDLAB_ORI_CA_ARL","lsServerOrigenARL","resultOrigenARL","MEDLAB_INS_ORIGEN","lsServerInstanciaOrigen","resultInstanciaOrigen","MEDLAB_LATERA","lsServerLateralidad","resultLateralidad","MEDLAB_ENMO_EN","lsServerEntidadMotiEnvio","resultEntidadMotiEnvio","GetAllCompany","lsServerCompany","resultCompany","codigo","descripcionSpa","console","log","handleChangeSegAgrupado","event","target","handleChangeSegAfectado","handleChangeSubsegmento","useEffect","GetAll","start","onend","stop","onstart","onresult","transcript","Array","from","results","result","join","onerror","error","handleClick","datos","fechaAhora","FormatDate","DataToUpdate","Object","keys","length","Actualizar","darkTitle","title","container","spacing","sx","pb","pt","xs","disabledCapture","disabledDelete","EstadoImg","onChange","e","disabled","size","required","name","options","fontSize","color","mr","defaultValue","bug","fullWidth","multiline","rows","pl","files","onClick","TitleButton","Guardar","Cancelar","Cargando","justifyContent","InputText","others","render","field","InputLabelProps","className","InputSelect","isError","errorMessage","prototype","hasOwnProperty","call","htmlFor","labelId","option","Catalogo","GetByIdCatalog","CatalogoId","InsertCatalog","catalogo","UpdateCatalogs","DeleteCatalog","idTipoCatalogo","GetAllBySubTipoCatalogo","substring","GetAllEmployee","Empleado","EmpleadoId","InsertEmployee","empleado","UpdateEmployees","DeleteEmployee","idEmpleado","SelectOnChange","Empresa","InsertCompany","UpdateCompanys","DeleteCompany","idEmpresa","PhotoModel","OpenModal","RemoverImg","alignItems","alt","src","width","height","user","Accordion","panel","defaultExpandedId","defaultExpand","children","expandIcon","square","toggle","expanded","setExpanded","defaultExpanded","newExpanded","palette","mode","fontWeight","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","_extends","display","transitions","create","vars","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","style","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","role","viewBox","cx","cy","r","fill","strokeWidth","_inherits","subClass","superClass","TypeError","constructor","writable","configurable","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","InputOnChange","startAdornment","onKeyDown","InputProps","position","GetById","url","SegmentoAgrupado","idSegmentoAgrupado","SegmentoAfectado","idSegmentoAfectado","Subsegmento","idSubsegmento","MetodoCie11","GetAllTipoAtencion","TipoAtencion","GetAllByTipoAtencion","idTipoAtencion","AtencionGetAllByTipoAtencion","InputDatePick","dateAdapter","AdapterDateFns","inputFormat","renderInput","params","KeyboardButtonProps","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","opacity","_getPrototypeOf","o","setPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","ReferenceError","_isNativeReflectConstruct","sham","Proxy","toString"],"mappings":"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","file":"static/js/87.8b0be8b9.chunk.js","sourcesContent":["import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllOccupationalMedicine = async (page, pageSize) => await getData(Url.MedicinaLaboral, { page, pageSize });\r\nexport const GetByIdOccupationalMedicine = async (id) => await getData(Url.MedicinaLaboralId, { id });\r\nexport const InsertOccupationalMedicine = async (medicinaLaboralX) => await postData(Url.MedicinaLaboral, medicinaLaboralX, true);\r\nexport const UpdateOccupationalMedicines = async (medicinaLaboralX) => await putData(Url.MedicinaLaboral, medicinaLaboralX);\r\nexport const DeleteOccupationalMedicine = async (idMedicinaLaboralX) => await deleteData(Url.MedicinaLaboral, { idMedicinaLaboralX });","export function PostOccupationalMedicine(id, cedula, resumenCaso, fechaRetiro, segmentoAgrupado, segmentoAfectado, subsegmento, codDx, nroFurel, regionInfoLaboral,\r\n    lateralidad, entidadQueMotivaEnvio, entidadDondeEnvia, fechaEntrega, fechaEnvio, investigado, observaciones,\r\n    fechaCalificacionEps, origenEps,\r\n    noSolicitudARL, fechaCalifiOrigenARL, origenARL, fechaCalificacionPclARL, pclARL, fechaEstructuraARL, fechaRecalificacionPclARL,\r\n    pclRecalificadaARL, fechaEstructuraRecalificadaARL,\r\n    fechaCalificaOrigenJRC, juntaCalifica, noDictamenJRC, origenJRC, controversia, conclusion, fechaCalificacionPclJRC, noDictamenPclJRC, pclJRC, fechaEstructuraPclJRC,\r\n    noActaRecursoJRC, fechaRecalificacionPclJRC, noDictamenRecalificacionJRC, juntaReCalificacionJRC, pclRecalificadaJRC, fechaRecalificacionEstJRC,\r\n    fechaCalificaOrigenJNC, noDictamenJNC, origenJNC, fechaCalificacionPclJNC, noDictamenPclJNC, pclJNC, fechaEstructuraJNC, fechaRecalificacionPclJNC,\r\n    noDictamenRecalificacionJNC, pclRecalificacionJNC,\r\n    origenInstaFinal, fechaEstructuracionOrigenInstaFinal, instanciaOrigenInstaFinal, pclFinalInstaFinal, instanciaFinal, fechaCalificacionPclInstFinal,\r\n    fechaEstructuracionPclInstFinal, indemnizado, entregadoMin, fechaPagoInstaFinal, indemnizadoRecalificado, fechaPagoRecalificadoInstaFinal,\r\n    estadoRHT, reintegro, reubicado, restringido, jornadaLaboral, indemnizacion,\r\n    sede, usuario, usuarioReporte, fechaSistema, fechaInforme, fechaReporte, fechaSistemaReporte, edadCalificado, antiguedadCalificado, urlDocumento) {\r\n    return {\r\n        id, cedula, resumenCaso, fechaRetiro, segmentoAgrupado, segmentoAfectado, subsegmento, codDx, nroFurel, regionInfoLaboral,\r\n        lateralidad, entidadQueMotivaEnvio, entidadDondeEnvia, fechaEntrega, fechaEnvio, investigado, observaciones,\r\n        fechaCalificacionEps, origenEps,\r\n        noSolicitudARL, fechaCalifiOrigenARL, origenARL, fechaCalificacionPclARL, pclARL, fechaEstructuraARL, fechaRecalificacionPclARL,\r\n        pclRecalificadaARL, fechaEstructuraRecalificadaARL,\r\n        fechaCalificaOrigenJRC, juntaCalifica, noDictamenJRC, origenJRC, controversia, conclusion, fechaCalificacionPclJRC, noDictamenPclJRC, pclJRC, fechaEstructuraPclJRC,\r\n        noActaRecursoJRC, fechaRecalificacionPclJRC, noDictamenRecalificacionJRC, juntaReCalificacionJRC, pclRecalificadaJRC, fechaRecalificacionEstJRC,\r\n        fechaCalificaOrigenJNC, noDictamenJNC, origenJNC, fechaCalificacionPclJNC, noDictamenPclJNC, pclJNC, fechaEstructuraJNC, fechaRecalificacionPclJNC,\r\n        noDictamenRecalificacionJNC, pclRecalificacionJNC,\r\n        origenInstaFinal, fechaEstructuracionOrigenInstaFinal, instanciaOrigenInstaFinal, pclFinalInstaFinal, instanciaFinal, fechaCalificacionPclInstFinal,\r\n        fechaEstructuracionPclInstFinal, indemnizado, entregadoMin, fechaPagoInstaFinal, indemnizadoRecalificado, fechaPagoRecalificadoInstaFinal,\r\n        estadoRHT, reintegro, reubicado, restringido, jornadaLaboral, indemnizacion,\r\n        sede, usuario, usuarioReporte, fechaSistema, fechaInforme, fechaReporte, fechaSistemaReporte, edadCalificado, antiguedadCalificado, urlDocumento\r\n    };\r\n}\r\n\r\nexport function PutOccupationalMedicine(id, cedula, resumenCaso, fechaRetiro, segmentoAgrupado, segmentoAfectado, subsegmento, codDx, nroFurel, regionInfoLaboral,\r\n    lateralidad, entidadQueMotivaEnvio, entidadDondeEnvia, fechaEntrega, fechaEnvio, investigado, observaciones,\r\n    fechaCalificacionEps, origenEps,\r\n    noSolicitudARL, fechaCalifiOrigenARL, origenARL, fechaCalificacionPclARL, pclARL, fechaEstructuraARL, fechaRecalificacionPclARL,\r\n    pclRecalificadaARL, fechaEstructuraRecalificadaARL,\r\n    fechaCalificaOrigenJRC, juntaCalifica, noDictamenJRC, origenJRC, controversia, conclusion, fechaCalificacionPclJRC, noDictamenPclJRC, pclJRC, fechaEstructuraPclJRC,\r\n    noActaRecursoJRC, fechaRecalificacionPclJRC, noDictamenRecalificacionJRC, juntaReCalificacionJRC, pclRecalificadaJRC, fechaRecalificacionEstJRC,\r\n    fechaCalificaOrigenJNC, noDictamenJNC, origenJNC, fechaCalificacionPclJNC, noDictamenPclJNC, pclJNC, fechaEstructuraJNC, fechaRecalificacionPclJNC,\r\n    noDictamenRecalificacionJNC, pclRecalificacionJNC,\r\n    origenInstaFinal, fechaEstructuracionOrigenInstaFinal, instanciaOrigenInstaFinal, pclFinalInstaFinal, instanciaFinal, fechaCalificacionPclInstFinal,\r\n    fechaEstructuracionPclInstFinal, indemnizado, entregadoMin, fechaPagoInstaFinal, indemnizadoRecalificado, fechaPagoRecalificadoInstaFinal,\r\n    estadoRHT, reintegro, reubicado, restringido, jornadaLaboral, indemnizacion,\r\n    sede, usuario, usuarioReporte, fechaSistema, fechaInforme, fechaReporte, fechaSistemaReporte, edadCalificado, antiguedadCalificado, urlDocumento) {\r\n    return {\r\n        id, cedula, resumenCaso, fechaRetiro, segmentoAgrupado, segmentoAfectado, subsegmento, codDx, nroFurel, regionInfoLaboral,\r\n        lateralidad, entidadQueMotivaEnvio, entidadDondeEnvia, fechaEntrega, fechaEnvio, investigado, observaciones,\r\n        fechaCalificacionEps, origenEps,\r\n        noSolicitudARL, fechaCalifiOrigenARL, origenARL, fechaCalificacionPclARL, pclARL, fechaEstructuraARL, fechaRecalificacionPclARL,\r\n        pclRecalificadaARL, fechaEstructuraRecalificadaARL,\r\n        fechaCalificaOrigenJRC, juntaCalifica, noDictamenJRC, origenJRC, controversia, conclusion, fechaCalificacionPclJRC, noDictamenPclJRC, pclJRC, fechaEstructuraPclJRC,\r\n        noActaRecursoJRC, fechaRecalificacionPclJRC, noDictamenRecalificacionJRC, juntaReCalificacionJRC, pclRecalificadaJRC, fechaRecalificacionEstJRC,\r\n        fechaCalificaOrigenJNC, noDictamenJNC, origenJNC, fechaCalificacionPclJNC, noDictamenPclJNC, pclJNC, fechaEstructuraJNC, fechaRecalificacionPclJNC,\r\n        noDictamenRecalificacionJNC, pclRecalificacionJNC,\r\n        origenInstaFinal, fechaEstructuracionOrigenInstaFinal, instanciaOrigenInstaFinal, pclFinalInstaFinal, instanciaFinal, fechaCalificacionPclInstFinal,\r\n        fechaEstructuracionPclInstFinal, indemnizado, entregadoMin, fechaPagoInstaFinal, indemnizadoRecalificado, fechaPagoRecalificadoInstaFinal,\r\n        estadoRHT, reintegro, reubicado, restringido, jornadaLaboral, indemnizacion,\r\n        sede, usuario, usuarioReporte, fechaSistema, fechaInforme, fechaReporte, fechaSistemaReporte, edadCalificado, antiguedadCalificado, urlDocumento\r\n    };\r\n}\r\n\r\n\r\nexport function ConvertToMedicinaLaboralToFormData(medicinaLaboralX) {\r\n    const formData = new FormData();\r\n\r\n    formData.append('id', medicinaLaboralX.id);\r\n    formData.append('cedula', medicinaLaboralX.cedula);\r\n    formData.append('resumenCaso', medicinaLaboralX.resumenCaso);\r\n    formData.append('fechaRetiro', medicinaLaboralX.fechaRetiro);\r\n    formData.append('segmentoAgrupado', medicinaLaboralX.segmentoAgrupado);\r\n    formData.append('segmentoAfectado', medicinaLaboralX.segmentoAfectado);\r\n    formData.append('subsegmento', medicinaLaboralX.subsegmento);\r\n    formData.append('codDx', medicinaLaboralX.codDx);\r\n    formData.append('nroFurel', medicinaLaboralX.nroFurel);\r\n    formData.append('regionInfoLaboral', medicinaLaboralX.regionInfoLaboral);\r\n    formData.append('lateralidad', medicinaLaboralX.lateralidad);\r\n    formData.append('entidadQueMotivaEnvio', medicinaLaboralX.entidadQueMotivaEnvio);\r\n    formData.append('entidadDondeEnvia', medicinaLaboralX.entidadDondeEnvia);\r\n    formData.append('fechaEntrega', medicinaLaboralX.fechaEntrega);\r\n    formData.append('fechaEnvio', medicinaLaboralX.fechaEnvio);\r\n    formData.append('investigado', medicinaLaboralX.investigado);\r\n    formData.append('observaciones', medicinaLaboralX.observaciones);\r\n\r\n    formData.append('fechaCalificacionEps', medicinaLaboralX.fechaCalificacionEps);\r\n    formData.append('origenEps', medicinaLaboralX.origenEps);\r\n\r\n    formData.append('noSolicitudARL', medicinaLaboralX.noSolicitudARL);\r\n    formData.append('fechaCalifiOrigenARL', medicinaLaboralX.fechaCalifiOrigenARL);\r\n    formData.append('origenARL', medicinaLaboralX.origenARL);\r\n    formData.append('fechaCalificacionPclARL', medicinaLaboralX.fechaCalificacionPclARL);\r\n    formData.append('pclARL', medicinaLaboralX.pclARL);\r\n    formData.append('fechaEstructuraARL', medicinaLaboralX.fechaEstructuraARL);\r\n    formData.append('fechaRecalificacionPclARL', medicinaLaboralX.fechaRecalificacionPclARL);\r\n    formData.append('pclRecalificadaARL', medicinaLaboralX.pclRecalificadaARL);\r\n    formData.append('fechaEstructuraRecalificadaARL', medicinaLaboralX.fechaEstructuraRecalificadaARL);\r\n\r\n    formData.append('fechaCalificaOrigenJRC', medicinaLaboralX.fechaCalificaOrigenJRC);\r\n    formData.append('juntaCalifica', medicinaLaboralX.juntaCalifica);\r\n    formData.append('noDictamenJRC', medicinaLaboralX.noDictamenJRC);\r\n    formData.append('origenJRC', medicinaLaboralX.origenJRC);\r\n    formData.append('controversia', medicinaLaboralX.controversia);\r\n    formData.append('conclusion', medicinaLaboralX.conclusion);\r\n    formData.append('fechaCalificacionPclJRC', medicinaLaboralX.fechaCalificacionPclJRC);\r\n    formData.append('noDictamenPclJRC', medicinaLaboralX.noDictamenPclJRC);\r\n    formData.append('pclJRC', medicinaLaboralX.pclJRC);\r\n    formData.append('fechaEstructuraPclJRC', medicinaLaboralX.fechaEstructuraPclJRC);\r\n    formData.append('noActaRecursoJRC', medicinaLaboralX.noActaRecursoJRC);\r\n    formData.append('fechaRecalificacionPclJRC', medicinaLaboralX.fechaRecalificacionPclJRC);\r\n    formData.append('noDictamenRecalificacionJRC', medicinaLaboralX.noDictamenRecalificacionJRC);\r\n    formData.append('juntaReCalificacionJRC', medicinaLaboralX.juntaReCalificacionJRC);\r\n    formData.append('pclRecalificadaJRC', medicinaLaboralX.pclRecalificadaJRC);\r\n    formData.append('fechaRecalificacionEstJRC', medicinaLaboralX.fechaRecalificacionEstJRC);\r\n\r\n    formData.append('fechaCalificaOrigenJNC', medicinaLaboralX.fechaCalificaOrigenJNC);\r\n    formData.append('noDictamenJNC', medicinaLaboralX.noDictamenJNC);\r\n    formData.append('origenJNC', medicinaLaboralX.origenJNC);\r\n    formData.append('fechaCalificacionPclJNC', medicinaLaboralX.fechaCalificacionPclJNC);\r\n    formData.append('noDictamenPclJNC', medicinaLaboralX.noDictamenPclJNC);\r\n    formData.append('pclJNC', medicinaLaboralX.pclJNC);\r\n    formData.append('fechaEstructuraJNC', medicinaLaboralX.fechaEstructuraJNC);\r\n    formData.append('fechaRecalificacionPclJNC', medicinaLaboralX.fechaRecalificacionPclJNC);\r\n    formData.append('noDictamenRecalificacionJNC', medicinaLaboralX.noDictamenRecalificacionJNC);\r\n    formData.append('pclRecalificacionJNC', medicinaLaboralX.pclRecalificacionJNC);\r\n\r\n    formData.append('origenInstaFinal', medicinaLaboralX.origenInstaFinal);\r\n    formData.append('fechaEstructuracionOrigenInstaFinal', medicinaLaboralX.fechaEstructuracionOrigenInstaFinal);\r\n    formData.append('instanciaOrigenInstaFinal', medicinaLaboralX.instanciaOrigenInstaFinal);\r\n    formData.append('pclFinalInstaFinal', medicinaLaboralX.pclFinalInstaFinal);\r\n    formData.append('instanciaFinal', medicinaLaboralX.instanciaFinal);\r\n    formData.append('fechaCalificacionPclInstFinal', medicinaLaboralX.fechaCalificacionPclInstFinal);\r\n    formData.append('fechaEstructuracionPclInstFinal', medicinaLaboralX.fechaEstructuracionPclInstFinal);\r\n    formData.append('indemnizado', medicinaLaboralX.indemnizado);\r\n    formData.append('entregadoMin', medicinaLaboralX.entregadoMin);\r\n    formData.append('fechaPagoInstaFinal', medicinaLaboralX.fechaPagoInstaFinal);\r\n    formData.append('indemnizadoRecalificado', medicinaLaboralX.indemnizadoRecalificado);\r\n    formData.append('fechaPagoRecalificadoInstaFinal', medicinaLaboralX.fechaPagoRecalificadoInstaFinal);\r\n\r\n    formData.append('estadoRHT', medicinaLaboralX.estadoRHT);\r\n    formData.append('reintegro', medicinaLaboralX.reintegro);\r\n    formData.append('reubicado', medicinaLaboralX.reubicado);\r\n    formData.append('restringido', medicinaLaboralX.restringido);\r\n    formData.append('jornadaLaboral', medicinaLaboralX.jornadaLaboral);\r\n    formData.append('indemnizacion', medicinaLaboralX.indemnizacion);\r\n\r\n    formData.append('sede', medicinaLaboralX.sede);\r\n    formData.append('usuario', medicinaLaboralX.usuario);\r\n    formData.append('usuarioReporte', medicinaLaboralX.usuarioReporte);\r\n    formData.append('fechaSistema', medicinaLaboralX.fechaSistema);\r\n    formData.append('fechaInforme', medicinaLaboralX.fechaInforme);\r\n    formData.append('fechaReporte', medicinaLaboralX.fechaReporte);\r\n    formData.append('fechaSistemaReporte', medicinaLaboralX.fechaSistemaReporte);\r\n\r\n    formData.append('edadCalificado', medicinaLaboralX.edadCalificado);\r\n    formData.append('antiguedadCalificado', medicinaLaboralX.antiguedadCalificado);\r\n    formData.append('urlDocumento', medicinaLaboralX.urlDocumento);\r\n\r\n    return formData;\r\n}","// Import de Material-ui\r\nimport { useState, useEffect } from 'react';\r\nimport {  useParams } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Button,\r\n    Grid,\r\n    useMediaQuery,\r\n    Typography,\r\n    Divider,\r\n} from '@mui/material';\r\nimport DomainTwoToneIcon from '@mui/icons-material/DomainTwoTone';\r\n\r\n\r\n// Terceros\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\n// Import del Proyecto\r\nimport { GetAllBySegAfectado, GetAllBySegAgrupado, GetAllBySubsegmento, GetAllSegmentoAgrupado } from 'api/clients/OthersClients';\r\nimport SelectOnChange from 'components/input/SelectOnChange';\r\nimport InputDatePick from 'components/input/InputDatePick';\r\nimport { FormatDate } from 'components/helpers/Format'\r\nimport Accordion from 'components/accordion/Accordion';\r\nimport PhotoModel from 'components/form/PhotoModel';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { GetAllByTipoCatalogo, GetAllCatalog } from 'api/clients/CatalogClient';\r\nimport { GetAllCompany } from 'api/clients/CompanyClient';\r\nimport InputText from 'components/input/InputText';\r\nimport InputSelect from 'components/input/InputSelect';\r\nimport { Message, TitleButton, CodCatalogo } from 'components/helpers/Enums';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { PutOccupationalMedicine } from 'formatdata/OccupationalMedicineForm';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport InputOnChange from 'components/input/InputOnChange';\r\n\r\nimport { GetByIdEmployee } from 'api/clients/EmployeeClient';\r\nimport { GetByIdOccupationalMedicine, UpdateOccupationalMedicines } from 'api/clients/OccupationalMedicineClient';\r\nimport Cargando from 'components/loading/Cargando';\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst mic = new SpeechRecognition();\r\n\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\nmic.lang = 'es-ES';\r\n\r\nconst UpdateOccupationalMedicine = () => {\r\n    const dispatch = useDispatch();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\r\n    const [lsOccupationalMedicine, setLsOccupationalMedicine] = useState([]);\r\n    const [fileUpload, setFileUpload] = useState(null);\r\n\r\n    const [catalog, setCatalog] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [lsResumenCaso, setLsResumenCaso] = useState([]);\r\n    const [lsRegion, setLsRegion] = useState([]);\r\n    const [lsLateralidad, setLsLateralidad] = useState([]);\r\n    const [lsEntidadMotiEnvio, setLsEntidadMotiEnvio] = useState([]);\r\n    const [lsEntidadDondeEnvia, setLsEntidadDondeEnvia] = useState([]);\r\n    const [lsInvestigado, setLsInvestigado] = useState([]);\r\n    const [lsOrigenEPS, setLsOrigenEPS] = useState([]);\r\n    const [lsOrigenARL, setLsOrigenARL] = useState([]);\r\n    const [lsJuntaCalificadaJRC, setLsJuntaCalificadaJRC] = useState([]);\r\n    const [lsInstanciaOrigen, setLsInstanciaOrigen] = useState([]);\r\n\r\n    const [lsSegmentoAgrupado, setLsSegmentoAgrupado] = useState([]);\r\n    const [segmentoAgrupado, setSegmentoAgrupado] = useState('');\r\n    const [lsSegmentoAfectado, setLsSegmentoAfectado] = useState([]);\r\n    const [segmentoAfectado, setSegmentoAfectado] = useState('');\r\n    const [lsSubsegmento, setLsSubsegmento] = useState([]);\r\n    const [subsegmento, setSubsegmento] = useState('');\r\n    const [lsCie11, setLsCie11] = useState([]);\r\n\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n    const [value, setValue] = useState(0);\r\n\r\n    const [document, setDocument] = useState('');\r\n    const [nombres, setNombres] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [celular, setCelular] = useState('');\r\n    const [escolaridad, setEscolaridad] = useState('');\r\n    const [empresa, setEmpresa] = useState('');\r\n    const [sede, setSede] = useState('');\r\n    const [fechaNaci, setFechaNaci] = useState(null);\r\n    const [genero, setGenero] = useState('');\r\n    const [estadoCivil, setEstadoCivil] = useState('');\r\n    const [contacto, setContacto] = useState('');\r\n    const [telefonoContacto, setTelefonoContacto] = useState('');\r\n    const [fechaContrato, setFechaContrato] = useState(null);\r\n    const [tipoContrato, setTipoContrato] = useState('');\r\n    const [payStatus, setPayStatus] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [rosterPosition, setRosterPosition] = useState('');\r\n    const [generalPosition, setGeneralPosition] = useState('');\r\n    const [departamento, setDepartamento] = useState('');\r\n    const [area, setArea] = useState('');\r\n    const [subArea, setSubArea] = useState('');\r\n    const [grupo, setGrupo] = useState('');\r\n    const [turno, setTurno] = useState('');\r\n    const [direccionResidencia, setDireccionResidencia] = useState('');\r\n    const [dptoResidencia, setDptoResidencia] = useState('');\r\n    const [municipioResidencia, setMunicipioResidencia] = useState('');\r\n    const [municipioNacido, setMunicipioNacido] = useState('');\r\n    const [dptoNacido, setDptoNacido] = useState('');\r\n    const [eps, setEps] = useState('');\r\n    const [afp, setAfp] = useState('');\r\n\r\n    const [fechaRetiro, setFechaRetiro] = useState(new Date());\r\n    const [fechaEntrega, setFechaEntrega] = useState(new Date());\r\n    const [fechaEnvio, setFechaEnvio] = useState(new Date());\r\n    const [fechaCalificacionEps, setFechaCalificacionEps] = useState(new Date());\r\n    const [fechaCalifiOrigenARL, setFechaCalifiOrigenARL] = useState(new Date());\r\n    const [fechaCalificacionPclARL, setFechaCalificacionPclARL] = useState(new Date());\r\n    const [fechaEstructuraARL, setFechaEstructuraARL] = useState(new Date());\r\n    const [fechaRecalificacionPclARL, setFechaRecalificacionPclARL] = useState(new Date());\r\n    const [fechaEstructuraRecalificadaARL, setFechaEstructuraRecalificadaARL] = useState(new Date());\r\n    const [fechaCalificaOrigenJRC, setFechaCalificaOrigenJRC] = useState(new Date());\r\n    const [fechaCalificacionPclJRC, setFechaCalificacionPclJRC] = useState(new Date());\r\n    const [fechaEstructuraPclJRC, setFechaEstructuraPclJRC] = useState(new Date());\r\n    const [fechaRecalificacionPclJRC, setFechaRecalificacionPclJRC] = useState(new Date());\r\n    const [fechaRecalificacionEstJRC, setFechaRecalificacionEstJRC] = useState(new Date());\r\n    const [fechaCalificaOrigenJNC, setFechaCalificaOrigenJNC] = useState(new Date());\r\n    const [fechaCalificacionPclJNC, setFechaCalificacionPclJNC] = useState(new Date());\r\n    const [fechaEstructuraJNC, setFechaEstructuraJNC] = useState(new Date());\r\n    const [fechaRecalificacionPclJNC, setFechaRecalificacionPclJNC] = useState(new Date());\r\n    const [fechaEstructuracionOrigenInstaFinal, setFechaEstructuracionOrigenInstaFinal] = useState(new Date());\r\n    const [fechaCalificacionPclInstFinal, setFechaCalificacionPclInstFinal] = useState(new Date());\r\n    const [fechaEstructuracionPclInstFinal, setFechaEstructuracionPclInstFinal] = useState(new Date());\r\n    const [fechaPagoInstaFinal, setFechaPagoInstaFinal] = useState(new Date());\r\n    const [fechaPagoRecalificadoInstaFinal, setFechaPagoRecalificadoInstaFinal] = useState(new Date());\r\n\r\n    const [isListening, setIsListening] = useState(false);\r\n    const [note, setNote] = useState(null);\r\n\r\n    const handleListen = () => {\r\n        if (isListening) {\r\n            mic.start()\r\n            mic.onend = () => {\r\n                console.log('continue..')\r\n                mic.start()\r\n            }\r\n        } else {\r\n            mic.stop()\r\n            mic.onend = () => {\r\n                console.log('Stopped Mic on Click')\r\n            }\r\n        }\r\n        mic.onstart = () => {\r\n            console.log('Mics on')\r\n        }\r\n        mic.onresult = event => {\r\n            const transcript = Array.from(event.results)\r\n                .map(result => result[0])\r\n                .map(result => result.transcript)\r\n                .join('')\r\n            console.log(transcript)\r\n            setNote(transcript)\r\n            mic.onerror = event => {\r\n                console.log(event.error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const methods = useForm();\r\n    /* { resolver: yupResolver(validationSchema) } */\r\n    const { handleSubmit, errors, reset } = methods;\r\n\r\n    const handleLoadingDocument = async (idEmployee) => {\r\n        try {\r\n            var lsQuestionnaire = await GetByIdEmployee(idEmployee);\r\n            if (lsQuestionnaire.status === 200) {\r\n                setImgSrc(lsQuestionnaire.data.imagenUrl);\r\n                setDocument(lsQuestionnaire.data.documento);\r\n                setNombres(lsQuestionnaire.data.nombres);\r\n                setEmail(lsQuestionnaire.data.email);\r\n                setCelular(lsQuestionnaire.data.celular);\r\n                setEscolaridad(lsQuestionnaire.data.escolaridad);\r\n                setEmpresa(lsQuestionnaire.data.empresa);\r\n                setSede(lsQuestionnaire.data.sede);\r\n                setFechaNaci(lsQuestionnaire.data.fechaNaci);\r\n                setGenero(lsQuestionnaire.data.genero);\r\n                setEstadoCivil(lsQuestionnaire.data.estadoCivil);\r\n                setContacto(lsQuestionnaire.data.contacto);\r\n                setTelefonoContacto(lsQuestionnaire.data.telefonoContacto);\r\n                setFechaContrato(lsQuestionnaire.data.fechaContrato);\r\n                setTipoContrato(lsQuestionnaire.data.tipoContrato);\r\n                setPayStatus(lsQuestionnaire.data.payStatus);\r\n                setType(lsQuestionnaire.data.type);\r\n                setRosterPosition(lsQuestionnaire.data.rosterPosition);\r\n                setGeneralPosition(lsQuestionnaire.data.generalPosition);\r\n                setDepartamento(lsQuestionnaire.data.departamento);\r\n                setArea(lsQuestionnaire.data.area);\r\n                setSubArea(lsQuestionnaire.data.subArea);\r\n                setGrupo(lsQuestionnaire.data.grupo);\r\n                setTurno(lsQuestionnaire.data.turno);\r\n                setDireccionResidencia(lsQuestionnaire.data.direccionResidencia);\r\n                setDptoResidencia(lsQuestionnaire.data.dptoResidencia);\r\n                setMunicipioResidencia(lsQuestionnaire.data.municipioResidencia);\r\n                setMunicipioNacido(lsQuestionnaire.data.municipioNacido);\r\n                setDptoNacido(lsQuestionnaire.data.dptoNacido);\r\n                setEps(lsQuestionnaire.data.eps);\r\n                setAfp(lsQuestionnaire.data.afp);\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: `${Message.ErrorDeDatos}`,\r\n                variant: 'alert',\r\n                alertSeverity: 'error',\r\n                close: false,\r\n                transition: 'SlideUp'\r\n            })\r\n        }\r\n    }\r\n\r\n    async function GetAll() {\r\n        try {\r\n            const lsServerAll = await GetByIdOccupationalMedicine(id);\r\n            if (lsServerAll.status === 200) {\r\n                setLsOccupationalMedicine(lsServerAll.data);\r\n                setSegmentoAgrupado(lsServerAll.data.segmentoAgrupado);\r\n                setSegmentoAfectado(lsServerAll.data.segmentoAfectado);\r\n                setSubsegmento(lsServerAll.data.subsegmento);\r\n                handleLoadingDocument(lsServerAll.data.cedula);\r\n\r\n                setFechaRetiro(lsServerAll.data.fechaRetiro); setFechaEntrega(lsServerAll.data.fechaEntrega); setFechaEnvio(lsServerAll.data.fechaEnvio);\r\n                setFechaCalificacionEps(lsServerAll.data.fechaCalificacionEps); setFechaCalifiOrigenARL(lsServerAll.data.fechaCalifiOrigenARL);\r\n                setFechaCalificacionPclARL(lsServerAll.data.fechaCalificacionPclARL); setFechaEstructuraARL(lsServerAll.data.fechaEstructuraARL);\r\n                setFechaRecalificacionPclARL(lsServerAll.data.fechaRecalificacionPclARL); setFechaEstructuraRecalificadaARL(lsServerAll.data.fechaEstructuraRecalificadaARL);\r\n                setFechaCalificaOrigenJRC(lsServerAll.data.fechaCalificaOrigenJRC); setFechaCalificacionPclJRC(lsServerAll.data.fechaCalificacionPclJRC);\r\n                setFechaEstructuraPclJRC(lsServerAll.data.fechaEstructuraPclJRC); setFechaRecalificacionPclJRC(lsServerAll.data.fechaRecalificacionPclJRC);\r\n                setFechaRecalificacionEstJRC(lsServerAll.data.fechaRecalificacionEstJRC); setFechaCalificaOrigenJNC(lsServerAll.data.fechaCalificaOrigenJNC);\r\n                setFechaCalificacionPclJNC(lsServerAll.data.fechaCalificacionPclJNC); setFechaEstructuraJNC(lsServerAll.data.fechaEstructuraJNC);\r\n                setFechaRecalificacionPclJNC(lsServerAll.data.fechaRecalificacionPclJNC);\r\n                setFechaEstructuracionOrigenInstaFinal(lsServerAll.data.fechaEstructuracionOrigenInstaFinal);\r\n                setFechaCalificacionPclInstFinal(lsServerAll.data.fechaCalificacionPclInstFinal);\r\n                setFechaEstructuracionPclInstFinal(lsServerAll.data.fechaEstructuracionPclInstFinal); setFechaPagoInstaFinal(lsServerAll.data.fechaPagoInstaFinal);\r\n                setFechaPagoRecalificadoInstaFinal(lsServerAll.data.fechaPagoRecalificadoInstaFinal);\r\n\r\n                const lsServerSegAfectado = await GetAllBySegAgrupado(lsServerAll.data.segmentoAgrupado, 0, 0);\r\n                var resultSegAfectado = lsServerSegAfectado.data.entities.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.descripcion\r\n                }));\r\n                setLsSegmentoAfectado(resultSegAfectado);\r\n\r\n                const lsServerSubsegmento = await GetAllBySegAfectado(lsServerAll.data.segmentoAfectado, 0, 0);\r\n                var resultSubsegmento = lsServerSubsegmento.data.entities.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.descripcion\r\n                }));\r\n                setLsSubsegmento(resultSubsegmento);\r\n\r\n                const lsServerCie11 = await GetAllBySubsegmento(lsServerAll.data.subsegmento, 0, 0);\r\n                var resultCie11 = lsServerCie11.data.entities.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.dx\r\n                }));\r\n                setLsCie11(resultCie11);\r\n\r\n            }\r\n            const lsServerCatalog = await GetAllCatalog(0, 0);\r\n            var resultCatalogo = lsServerCatalog.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setCatalog(resultCatalogo);\r\n\r\n            const lsServerSegAgrupado = await GetAllSegmentoAgrupado(0, 0);\r\n            var resultSegAgrupado = lsServerSegAgrupado.data.entities.map((item) => ({\r\n                value: item.id,\r\n                label: item.nombre\r\n            }));\r\n            setLsSegmentoAgrupado(resultSegAgrupado);\r\n\r\n            const lsServerRegion = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_REGION);\r\n            var resultRegion = lsServerRegion.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsRegion(resultRegion);\r\n\r\n            const lsServerJuntaCalificadaJRC = await GetAllByTipoCatalogo(0, 0, CodCatalogo.Departamento);\r\n            var resultJuntaCalificadaJRC = lsServerJuntaCalificadaJRC.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsJuntaCalificadaJRC(resultJuntaCalificadaJRC);\r\n\r\n            const lsServerInvestigado = await GetAllByTipoCatalogo(0, 0, CodCatalogo.Opciones_SINO);\r\n            var resultInvestigado = lsServerInvestigado.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsInvestigado(resultInvestigado);\r\n\r\n            const lsServerEntidadDondeEnvia = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_ENDON_EN);\r\n            var resultEntidadDondeEnvia = lsServerEntidadDondeEnvia.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsEntidadDondeEnvia(resultEntidadDondeEnvia);\r\n\r\n            const lsServerResumenCaso = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_RECASO);\r\n            var resultResumenCaso = lsServerResumenCaso.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsResumenCaso(resultResumenCaso);\r\n\r\n            const lsServerOrigenEPS = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_ORIGEN_EPS);\r\n            var resultOrigenEPS = lsServerOrigenEPS.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsOrigenEPS(resultOrigenEPS);\r\n\r\n            const lsServerOrigenARL = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_ORI_CA_ARL);\r\n            var resultOrigenARL = lsServerOrigenARL.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsOrigenARL(resultOrigenARL);\r\n\r\n            const lsServerInstanciaOrigen = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_INS_ORIGEN);\r\n            var resultInstanciaOrigen = lsServerInstanciaOrigen.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsInstanciaOrigen(resultInstanciaOrigen);\r\n\r\n            const lsServerLateralidad = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_LATERA);\r\n            var resultLateralidad = lsServerLateralidad.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsLateralidad(resultLateralidad);\r\n\r\n            const lsServerEntidadMotiEnvio = await GetAllByTipoCatalogo(0, 0, CodCatalogo.MEDLAB_ENMO_EN);\r\n            var resultEntidadMotiEnvio = lsServerEntidadMotiEnvio.data.entities.map((item) => ({\r\n                value: item.idCatalogo,\r\n                label: item.nombre\r\n            }));\r\n            setLsEntidadMotiEnvio(resultEntidadMotiEnvio);\r\n\r\n            const lsServerCompany = await GetAllCompany(0, 0);\r\n            var resultCompany = lsServerCompany.data.entities.map((item) => ({\r\n                value: item.codigo,\r\n                label: item.descripcionSpa\r\n            }));\r\n            setCompany(resultCompany);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleChangeSegAgrupado = async (event) => {\r\n        try {\r\n            setLsSegmentoAfectado([]); setLsSubsegmento([]); setLsCie11([]); setSegmentoAfectado('');\r\n            setSubsegmento(''); setSegmentoAfectado(''); setSegmentoAgrupado('');\r\n            setSegmentoAgrupado(event.target.value);\r\n\r\n            const lsServerSegAfectado = await GetAllBySegAgrupado(event.target.value, 0, 0);\r\n            var resultSegAfectado = lsServerSegAfectado.data.entities.map((item) => ({\r\n                value: item.id,\r\n                label: item.descripcion\r\n            }));\r\n            setLsSegmentoAfectado(resultSegAfectado);\r\n\r\n            console.log(event.target.value);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLsSegmentoAfectado([]);\r\n        }\r\n    }\r\n\r\n    const handleChangeSegAfectado = async (event) => {\r\n        try {\r\n            setLsSubsegmento([]); setLsCie11([]); setSubsegmento('');\r\n            setSegmentoAfectado(event.target.value);\r\n\r\n            const lsServerSubsegmento = await GetAllBySegAfectado(event.target.value, 0, 0);\r\n            var resultSubsegmento = lsServerSubsegmento.data.entities.map((item) => ({\r\n                value: item.id,\r\n                label: item.descripcion\r\n            }));\r\n            setLsSubsegmento(resultSubsegmento);\r\n\r\n            console.log(event.target.value);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLsSubsegmento([]);\r\n        }\r\n    }\r\n\r\n    const handleChangeSubsegmento = async (event) => {\r\n        try {\r\n            setSubsegmento(event.target.value);\r\n\r\n            const lsServerCie11 = await GetAllBySubsegmento(event.target.value, 0, 0);\r\n            var resultCie11 = lsServerCie11.data.entities.map((item) => ({\r\n                value: item.id,\r\n                label: item.dx\r\n            }));\r\n            setLsCie11(resultCie11);\r\n\r\n            console.log(event.target.value);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLsCie11([]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetAll();\r\n        handleListen();\r\n    }, [isListening])\r\n\r\n    const handleClick = async (datos) => {\r\n        try {\r\n            const usuario = \"Manuel Vásquez\";\r\n            const fechaAhora = FormatDate(new Date());\r\n\r\n            const DataToUpdate = PutOccupationalMedicine(id, document, datos.resumenCaso, FormatDate(fechaRetiro), segmentoAgrupado, segmentoAfectado, subsegmento,\r\n                datos.codDx, datos.nroFurel, datos.regionInfoLaboral, datos.lateralidad, datos.entidadQueMotivaEnvio, datos.entidadDondeEnvia,\r\n                FormatDate(fechaEntrega), FormatDate(fechaEnvio), datos.investigado, datos.observaciones,\r\n                FormatDate(fechaCalificacionEps), datos.origenEps,\r\n                datos.noSolicitudARL, FormatDate(fechaCalifiOrigenARL), datos.origenARL, FormatDate(fechaCalificacionPclARL), datos.pclARL,\r\n                FormatDate(fechaEstructuraARL), FormatDate(fechaRecalificacionPclARL),\r\n                datos.pclRecalificadaARL, FormatDate(fechaEstructuraRecalificadaARL),\r\n                FormatDate(fechaCalificaOrigenJRC), datos.juntaCalifica, datos.noDictamenJRC, datos.origenJRC, datos.controversia, datos.conclusion,\r\n                FormatDate(fechaCalificacionPclJRC),\r\n                datos.noDictamenPclJRC, datos.pclJRC, FormatDate(fechaEstructuraPclJRC),\r\n                datos.noActaRecursoJRC, FormatDate(fechaRecalificacionPclJRC), datos.noDictamenRecalificacionJRC, datos.juntaReCalificacionJRC, datos.pclRecalificadaJRC,\r\n                FormatDate(fechaRecalificacionEstJRC),\r\n                FormatDate(fechaCalificaOrigenJNC), datos.noDictamenJNC, datos.origenJNC, FormatDate(fechaCalificacionPclJNC), datos.noDictamenPclJNC,\r\n                datos.pclJNC, FormatDate(fechaEstructuraJNC),\r\n                FormatDate(fechaRecalificacionPclJNC),\r\n                datos.noDictamenRecalificacionJNC, datos.pclRecalificacionJNC,\r\n                datos.origenInstaFinal, FormatDate(fechaEstructuracionOrigenInstaFinal), datos.instanciaOrigenInstaFinal, datos.pclFinalInstaFinal, datos.instanciaFinal,\r\n                FormatDate(fechaCalificacionPclInstFinal),\r\n                FormatDate(fechaEstructuracionPclInstFinal), datos.indemnizado, datos.entregadoMin, FormatDate(fechaPagoInstaFinal), datos.indemnizadoRecalificado,\r\n                FormatDate(fechaPagoRecalificadoInstaFinal),\r\n                datos.estadoRHT, datos.reintegro, datos.reubicado, datos.restringido, datos.jornadaLaboral, datos.indemnizacion,\r\n                sede, usuario, usuario, fechaAhora, fechaAhora, fechaAhora, fechaAhora, \"Edad Calificado\", \"Antiguedad Calificado\");\r\n\r\n            if (Object.keys(datos.length !== 0)) {\r\n                const result = await UpdateOccupationalMedicines(DataToUpdate);\r\n                if (result.status === 200) {\r\n                    dispatch({\r\n                        type: SNACKBAR_OPEN,\r\n                        open: true,\r\n                        message: `${Message.Actualizar}`,\r\n                        variant: 'alert',\r\n                        alertSeverity: 'success',\r\n                        close: false,\r\n                        transition: 'SlideUp'\r\n                    })\r\n                    setValue(0);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: `${error}`,\r\n                variant: 'alert',\r\n                alertSeverity: 'error',\r\n                close: false,\r\n                transition: 'SlideUp'\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard>\r\n            {lsOccupationalMedicine.length != 0 ? <>\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">DATOS DEL PACIENTE</Typography>}>\r\n                    <Grid container spacing={2} sx={{ pb: 3, pt: 3 }}>\r\n                        <Grid item xs={3}>\r\n                            <PhotoModel\r\n                                disabledCapture\r\n                                disabledDelete\r\n                                EstadoImg={imgSrc}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container spacing={2} item xs={9}>\r\n                            <Grid item xs={4}>\r\n                                <InputOnChange\r\n                                    label=\"N° Documento\"\r\n                                    onChange={(e) => setDocument(e?.target.value)}\r\n                                    value={document}\r\n                                    disabled\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    required={true}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputOnChange\r\n                                    label=\"Nombres\"\r\n                                    value={nombres}\r\n                                    onChange={(e) => setNombres(e?.target.value)}\r\n                                    disabled\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    required={true}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputOnChange\r\n                                    label=\"Email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e?.target.value)}\r\n                                    disabled\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    required={true}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputOnChange\r\n                                    label=\"Celular\"\r\n                                    value={celular}\r\n                                    onChange={(e) => setCelular(e?.target.value)}\r\n                                    disabled\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    required={true}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <SelectOnChange\r\n                                    name=\"escolaridad\"\r\n                                    label=\"Escolaridad\"\r\n                                    disabled\r\n                                    options={catalog}\r\n                                    value={escolaridad}\r\n                                    onChange={(e) => setEscolaridad(e?.target.value)}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <SelectOnChange\r\n                                    name=\"empresa\"\r\n                                    label=\"Empresa\"\r\n                                    disabled\r\n                                    options={company}\r\n                                    value={empresa}\r\n                                    onChange={(e) => setEmpresa(e?.target.value)}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <SelectOnChange\r\n                                    name=\"sede\"\r\n                                    label=\"Sede\"\r\n                                    disabled\r\n                                    options={catalog}\r\n                                    value={sede}\r\n                                    onChange={(e) => setSede(e?.target.value)}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputDatePick\r\n                                    label=\"Fecha de Nacimiento\"\r\n                                    value={fechaNaci}\r\n                                    disabled\r\n                                    onChange={(e) => setFechaNaci(e)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <SelectOnChange\r\n                                    name=\"genero\"\r\n                                    label=\"Genero\"\r\n                                    disabled\r\n                                    options={catalog}\r\n                                    value={genero}\r\n                                    onChange={(e) => setGenero(e?.target.value)}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <SelectOnChange\r\n                                    name=\"estadoCivil\"\r\n                                    label=\"Estado Civil\"\r\n                                    disabled\r\n                                    options={catalog}\r\n                                    value={estadoCivil}\r\n                                    onChange={(e) => setEstadoCivil(e?.target.value)}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputOnChange\r\n                                    label=\"Contacto\"\r\n                                    value={contacto}\r\n                                    onChange={(e) => setContacto(e?.target.value)}\r\n                                    disabled\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    required={true}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputOnChange\r\n                                    label=\"Teléfono de Contacto\"\r\n                                    value={telefonoContacto}\r\n                                    onChange={(e) => setTelefonoContacto(e?.target.value)}\r\n                                    disabled\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    required={true}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Accordion title={<><DomainTwoToneIcon fontSize=\"small\" color=\"primary\" sx={{ mr: 0.5 }} />\r\n                    <Typography variant=\"subtitle1\" color=\"inherit\">Ver mas...</Typography></>}>\r\n                    <Grid item sx={{ pt: 2, pb: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <InputDatePick\r\n                                        label=\"Fecha de Contrato\"\r\n                                        value={fechaContrato}\r\n                                        disabled\r\n                                        onChange={(e) => setFechaContrato(e)}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"tipoContrato\"\r\n                                        label=\"Tipo de Contrato\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={tipoContrato}\r\n                                        onChange={(e) => setTipoContrato(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"estado\"\r\n                                        label=\"Estado\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={payStatus}\r\n                                        onChange={(e) => setPayStatus(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"Rol\"\r\n                                        label=\"Rol\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={type}\r\n                                        onChange={(e) => setType(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"rosterPosition\"\r\n                                        label=\"Roster Position\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={rosterPosition}\r\n                                        onChange={(e) => setRosterPosition(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"generalPosition\"\r\n                                        label=\"General Position\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={generalPosition}\r\n                                        onChange={(e) => setGeneralPosition(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"Departamento\"\r\n                                        label=\"Departamento\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={departamento}\r\n                                        onChange={(e) => setDepartamento(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"Area\"\r\n                                        label=\"Area\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={area}\r\n                                        onChange={(e) => setArea(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"Subarea\"\r\n                                        label=\"Subarea\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={subArea}\r\n                                        onChange={(e) => setSubArea(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"Grupo\"\r\n                                        label=\"Grupo\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={grupo}\r\n                                        onChange={(e) => setGrupo(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"Turno\"\r\n                                        label=\"Turno\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={turno}\r\n                                        onChange={(e) => setTurno(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <InputOnChange\r\n                                        label=\"Dirección de Residencia\"\r\n                                        value={direccionResidencia}\r\n                                        onChange={(e) => setDireccionResidencia(e?.target.value)}\r\n                                        disabled\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                        required={true}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"dptoResidencia\"\r\n                                        label=\"Departamento de Residencia\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={dptoResidencia}\r\n                                        onChange={(e) => setDptoResidencia(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"municipioResidencia\"\r\n                                        label=\"Municipio de Residencia\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={municipioResidencia}\r\n                                        onChange={(e) => setMunicipioResidencia(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"municipioNacido\"\r\n                                        label=\"Municipio de Nacimiento\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={municipioNacido}\r\n                                        onChange={(e) => setMunicipioNacido(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"dptoNacido\"\r\n                                        label=\"Departamento de Nacimiento\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={dptoNacido}\r\n                                        onChange={(e) => setDptoNacido(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"EPS\"\r\n                                        label=\"EPS\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={eps}\r\n                                        onChange={(e) => setEps(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <AnimateButton>\r\n                                    <SelectOnChange\r\n                                        name=\"AFP\"\r\n                                        label=\"AFP\"\r\n                                        disabled\r\n                                        options={catalog}\r\n                                        value={afp}\r\n                                        onChange={(e) => setAfp(e?.target.value)}\r\n                                        size={matchesXS ? 'small' : 'medium'}\r\n                                    />\r\n                                </AnimateButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Accordion>\r\n                <Divider />\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">INFORMACIÓN LABORAL</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"resumenCaso\"\r\n                                    label=\"Resumen Caso\"\r\n                                    defaultValue={lsOccupationalMedicine.resumenCaso}\r\n                                    options={lsResumenCaso}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Retiro\"\r\n                                value={fechaRetiro}\r\n                                onChange={(e) => setFechaRetiro(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <SelectOnChange\r\n                                name=\"segmentoAgrupado\"\r\n                                label=\"Segmento Agrupado\"\r\n                                onChange={handleChangeSegAgrupado}\r\n                                value={segmentoAgrupado}\r\n                                options={lsSegmentoAgrupado}\r\n                                size={matchesXS ? 'small' : 'medium'}\r\n                                bug={errors}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <SelectOnChange\r\n                                name=\"segmentoAfectado\"\r\n                                label=\"Segmento Afectado\"\r\n                                onChange={handleChangeSegAfectado}\r\n                                value={segmentoAfectado}\r\n                                options={lsSegmentoAfectado}\r\n                                disabled={lsSegmentoAfectado.length != 0 ? false : true}\r\n                                size={matchesXS ? 'small' : 'medium'}\r\n                                bug={errors}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <SelectOnChange\r\n                                name=\"subsegmento\"\r\n                                label=\"Subsegmento\"\r\n                                onChange={handleChangeSubsegmento}\r\n                                value={subsegmento}\r\n                                options={lsSubsegmento}\r\n                                disabled={lsSubsegmento.length != 0 ? false : true}\r\n                                size={matchesXS ? 'small' : 'medium'}\r\n                                bug={errors}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"codDx\"\r\n                                    label=\"Diagnóstico\"\r\n                                    defaultValue={lsOccupationalMedicine.codDx}\r\n                                    options={lsCie11}\r\n                                    disabled={lsCie11.length != 0 ? false : true}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.nroFurel}\r\n                                    fullWidth\r\n                                    name=\"nroFurel\"\r\n                                    label=\"No. FUREL\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"regionInfoLaboral\"\r\n                                    label=\"Región\"\r\n                                    defaultValue={lsOccupationalMedicine.regionInfoLaboral}\r\n                                    options={lsRegion}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"lateralidad\"\r\n                                    label=\"Lateralidad\"\r\n                                    defaultValue={lsOccupationalMedicine.lateralidad}\r\n                                    options={lsLateralidad}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"entidadQueMotivaEnvio\"\r\n                                    label=\"Entidad que motiva el envio\"\r\n                                    defaultValue={lsOccupationalMedicine.entidadQueMotivaEnvio}\r\n                                    options={lsEntidadMotiEnvio}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"entidadDondeEnvia\"\r\n                                    label=\"Entidad Donde Envía\"\r\n                                    defaultValue={lsOccupationalMedicine.entidadDondeEnvia}\r\n                                    options={lsEntidadDondeEnvia}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha de Entrega\"\r\n                                value={fechaEntrega}\r\n                                onChange={(e) => setFechaEntrega(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha de Envio\"\r\n                                value={fechaEnvio}\r\n                                onChange={(e) => setFechaEnvio(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"investigado\"\r\n                                    label=\"Investigado\"\r\n                                    defaultValue={lsOccupationalMedicine.investigado}\r\n                                    options={lsInvestigado}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.observaciones}\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows={4}\r\n                                    name=\"observaciones\"\r\n                                    label=\"Observaciones\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">CALIFICACIÓN EPS</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación\"\r\n                                value={fechaCalificacionEps}\r\n                                onChange={(e) => setFechaCalificacionEps(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"origenEps\"\r\n                                    label=\"Orígenes\"\r\n                                    defaultValue={lsOccupationalMedicine.origenEps}\r\n                                    options={lsOrigenEPS}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">CALIFICACIÓN ARL</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noSolicitudARL}\r\n                                    fullWidth\r\n                                    name=\"noSolicitudARL\"\r\n                                    label=\"Nro. Solicitud\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación Origen\"\r\n                                value={fechaCalifiOrigenARL}\r\n                                onChange={(e) => setFechaCalifiOrigenARL(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"origenARL\"\r\n                                    label=\"Origen\"\r\n                                    defaultValue={lsOccupationalMedicine.origenARL}\r\n                                    options={lsOrigenARL}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación PCL\"\r\n                                value={fechaCalificacionPclARL}\r\n                                onChange={(e) => setFechaCalificacionPclARL(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclARL}\r\n                                    fullWidth\r\n                                    name=\"pclARL\"\r\n                                    label=\"% PCL\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Estructura\"\r\n                                value={fechaEstructuraARL}\r\n                                onChange={(e) => setFechaEstructuraARL(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha ReCalificación PCL\"\r\n                                value={fechaRecalificacionPclARL}\r\n                                onChange={(e) => setFechaRecalificacionPclARL(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclRecalificadaARL}\r\n                                    fullWidth\r\n                                    name=\"pclRecalificadaARL\"\r\n                                    label=\"% PCL Recalificada\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Estructura\"\r\n                                value={fechaEstructuraRecalificadaARL}\r\n                                onChange={(e) => setFechaEstructuraRecalificadaARL(e)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">JRC</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación Origen\"\r\n                                value={fechaCalificaOrigenJRC}\r\n                                onChange={(e) => setFechaCalificaOrigenJRC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"juntaCalifica\"\r\n                                    label=\"Junta Califica\"\r\n                                    defaultValue={lsOccupationalMedicine.juntaCalifica}\r\n                                    options={lsJuntaCalificadaJRC}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noDictamenJRC}\r\n                                    fullWidth\r\n                                    name=\"noDictamenJRC\"\r\n                                    label=\"Nro. Dictamen\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"origenJRC\"\r\n                                    label=\"Origen\"\r\n                                    defaultValue={lsOccupationalMedicine.origenJRC}\r\n                                    options={lsOrigenARL}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.controversia}\r\n                                    fullWidth\r\n                                    name=\"controversia\"\r\n                                    label=\"Controversia\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.conclusion}\r\n                                    fullWidth\r\n                                    name=\"conclusion\"\r\n                                    label=\"Conclusión\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación PCL\"\r\n                                value={fechaCalificacionPclJRC}\r\n                                onChange={(e) => setFechaCalificacionPclJRC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noDictamenPclJRC}\r\n                                    fullWidth\r\n                                    name=\"noDictamenPclJRC\"\r\n                                    label=\"Nro. Dictamen PCL\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclJRC}\r\n                                    fullWidth\r\n                                    name=\"pclJRC\"\r\n                                    label=\"PCL\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Estructura\"\r\n                                value={fechaEstructuraPclJRC}\r\n                                onChange={(e) => setFechaEstructuraPclJRC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noActaRecursoJRC}\r\n                                    fullWidth\r\n                                    name=\"noActaRecursoJRC\"\r\n                                    label=\"Nro. Acta Recurso\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha ReCalificación PCL\"\r\n                                value={fechaRecalificacionPclJRC}\r\n                                onChange={(e) => setFechaRecalificacionPclJRC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noDictamenRecalificacionJRC}\r\n                                    fullWidth\r\n                                    name=\"noDictamenRecalificacionJRC\"\r\n                                    label=\"No Dictamen Recalificación\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.juntaReCalificacionJRC}\r\n                                    fullWidth\r\n                                    name=\"juntaReCalificacionJRC\"\r\n                                    label=\"Junta Recalificación\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclRecalificadaJRC}\r\n                                    fullWidth\r\n                                    name=\"pclRecalificadaJRC\"\r\n                                    label=\"% PCL Recalificada\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Recalificación Est.\"\r\n                                value={fechaRecalificacionEstJRC}\r\n                                onChange={(e) => setFechaRecalificacionEstJRC(e)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">JNC</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación Origen\"\r\n                                value={fechaCalificaOrigenJNC}\r\n                                onChange={(e) => setFechaCalificaOrigenJNC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noDictamenJNC}\r\n                                    fullWidth\r\n                                    name=\"noDictamenJNC\"\r\n                                    label=\"Nro. Dictamen\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"origenJNC\"\r\n                                    label=\"Origen\"\r\n                                    defaultValue={lsOccupationalMedicine.origenJNC}\r\n                                    options={lsOrigenARL}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación Origen\"\r\n                                value={fechaCalificacionPclJNC}\r\n                                onChange={(e) => setFechaCalificacionPclJNC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noDictamenPclJNC}\r\n                                    fullWidth\r\n                                    name=\"noDictamenPclJNC\"\r\n                                    label=\"No. Dictamen\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclJNC}\r\n                                    fullWidth\r\n                                    name=\"pclJNC\"\r\n                                    label=\"% PCL\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Estructura\"\r\n                                value={fechaEstructuraJNC}\r\n                                onChange={(e) => setFechaEstructuraJNC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación Origen\"\r\n                                value={fechaRecalificacionPclJNC}\r\n                                onChange={(e) => setFechaRecalificacionPclJNC(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.noDictamenRecalificacionJNC}\r\n                                    fullWidth\r\n                                    name=\"noDictamenRecalificacionJNC\"\r\n                                    label=\"No. Dictamen\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclRecalificacionJNC}\r\n                                    fullWidth\r\n                                    name=\"pclRecalificacionJNC\"\r\n                                    label=\"% PCL\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">INSTANCIA FINAL</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"origenInstaFinal\"\r\n                                    label=\"Origen\"\r\n                                    defaultValue={lsOccupationalMedicine.origenInstaFinal}\r\n                                    options={lsOrigenARL}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Estructuración Origen\"\r\n                                value={fechaEstructuracionOrigenInstaFinal}\r\n                                onChange={(e) => setFechaEstructuracionOrigenInstaFinal(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"instanciaOrigenInstaFinal\"\r\n                                    label=\"Instancia Origen\"\r\n                                    defaultValue={lsOccupationalMedicine.instanciaOrigenInstaFinal}\r\n                                    options={lsInstanciaOrigen}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.pclFinalInstaFinal}\r\n                                    fullWidth\r\n                                    name=\"pclFinalInstaFinal\"\r\n                                    label=\"% PCL Final\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.instanciaFinal}\r\n                                    fullWidth\r\n                                    name=\"instanciaFinal\"\r\n                                    label=\"Instancia Final\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Calificación PCL\"\r\n                                value={fechaCalificacionPclInstFinal}\r\n                                onChange={(e) => setFechaCalificacionPclInstFinal(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Estructuracion PCL\"\r\n                                value={fechaEstructuracionPclInstFinal}\r\n                                onChange={(e) => setFechaEstructuracionPclInstFinal(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"indemnizado\"\r\n                                    label=\"Indemnizado\"\r\n                                    defaultValue={lsOccupationalMedicine.indemnizado}\r\n                                    options={lsInvestigado}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Pago\"\r\n                                value={fechaPagoInstaFinal}\r\n                                onChange={(e) => setFechaPagoInstaFinal(e)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"entregadoMin\"\r\n                                    label=\"Entregado al MIN\"\r\n                                    defaultValue={lsOccupationalMedicine.entregadoMin}\r\n                                    options={lsInvestigado}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormProvider {...methods}>\r\n                                <InputSelect\r\n                                    name=\"indemnizadoRecalificado\"\r\n                                    label=\"Indemnizado Recalificado\"\r\n                                    defaultValue={lsOccupationalMedicine.indemnizadoRecalificado}\r\n                                    options={lsInvestigado}\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputDatePick\r\n                                label=\"Fecha Pago\"\r\n                                value={fechaPagoRecalificadoInstaFinal}\r\n                                onChange={(e) => setFechaPagoRecalificadoInstaFinal(e)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<Typography variant=\"h4\">ESTADO ARL</Typography>}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.estadoRHT}\r\n                                    fullWidth\r\n                                    name=\"estadoRHT\"\r\n                                    label=\"Estado RHT\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                    rows={4}\r\n                                    multiline\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.reintegro}\r\n                                    fullWidth\r\n                                    name=\"reintegro\"\r\n                                    label=\"Reintegro\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                    rows={4}\r\n                                    multiline\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.reubicado}\r\n                                    fullWidth\r\n                                    name=\"reubicado\"\r\n                                    label=\"Reubicado\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                    rows={4}\r\n                                    multiline\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.restringido}\r\n                                    fullWidth\r\n                                    name=\"restringido\"\r\n                                    label=\"Restringido\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                    rows={4}\r\n                                    multiline\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.jornadaLaboral}\r\n                                    fullWidth\r\n                                    name=\"jornadaLaboral\"\r\n                                    label=\"Jornada Laboral\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                    rows={4}\r\n                                    multiline\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormProvider {...methods}>\r\n                                <InputText\r\n                                    defaultValue={lsOccupationalMedicine.indemnizacion}\r\n                                    fullWidth\r\n                                    name=\"indemnizacion\"\r\n                                    label=\"Indemnización\"\r\n                                    size={matchesXS ? 'small' : 'medium'}\r\n                                    bug={errors}\r\n                                    rows={4}\r\n                                    multiline\r\n                                />\r\n                            </FormProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid sx={{ pb: 2 }} />\r\n                <SubCard darkTitle title={<><Typography variant=\"h4\">RESULTADO INVESTIGACIÓN LABORAL</Typography></>}>\r\n                    <Grid xs={5} sx={{ pl: 4, pt: 4 }} container spacing={2}>\r\n                        <input type=\"file\" onChange={(e) => setFileUpload(e.target.files[0])} />\r\n\r\n                        {/* <ViewPdf handleFile={handleFile} pdfFile={pdfFile} pdfError={pdfError} title=\"Visualizar PDF de Medicina Laboral\" /> */}\r\n                    </Grid>\r\n                </SubCard>\r\n\r\n                <Grid item xs={12} sx={{ pb: 3, pt: 3 }}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" onClick={handleSubmit(handleClick)} fullWidth>\r\n                                    {TitleButton.Guardar}\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <AnimateButton>\r\n                                <Button variant=\"outlined\" fullWidth onClick={() => navigate(\"/occupationalmedicine/list\")}>\r\n                                    {TitleButton.Cancelar}\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </> : <Cargando />}\r\n        </MainCard >\r\n    );\r\n};\r\n\r\nexport default UpdateOccupationalMedicine;","import { CircularProgress, Grid } from '@mui/material';\r\n\r\nexport default function Cargando({ size = 250 }) {\r\n    return (\r\n        <>\r\n            <Grid sx={{ pt: 2 }} />\r\n\r\n            <Grid container justifyContent=\"center\">\r\n                <CircularProgress color=\"success\" size={size} />\r\n            </Grid>\r\n            <Grid sx={{ pb: 2 }} />\r\n\r\n        </>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport {\r\n    FormHelperText,\r\n    Grid,\r\n    TextField,\r\n} from '@mui/material';\r\n\r\nconst InputText = ({ bug, defaultValue, label, size, fullWidth = true, name, required, ...others }) => {\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                render={({ field }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        label={label}\r\n                        size={size}\r\n                        InputLabelProps={{\r\n                            className: required ? 'required-label' : '',\r\n                            required: required || false\r\n                        }}\r\n                        error={bug ? true : false}\r\n                        fullWidth\r\n                        {...others}\r\n                    />\r\n                )}\r\n            />\r\n            {bug && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{bug}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputText;\r\n\r\nInputText.propTypes = {\r\n    bug: PropTypes.object,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    name: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    fullWidth: PropTypes.bool\r\n};","import PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport {\r\n    FormHelperText,\r\n    Grid,\r\n    FormControl,\r\n    MenuItem,\r\n    InputLabel,\r\n    Select,\r\n} from '@mui/material';\r\n\r\nconst InputSelect = ({ bug, options, size, defaultValue, label, name, ...others }) => {\r\n    let isError = false;\r\n    let errorMessage = '';\r\n    if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\r\n        isError = true;\r\n        errorMessage = bug[name].message;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                render={({ field }) => (\r\n                    <FormControl fullWidth error={isError}>\r\n                        <InputLabel htmlFor=\"my-input\" id=\"demo-simple-select-label\" /* sx={{ fontSize: 14 }} */>\r\n                            {label}\r\n                        </InputLabel>\r\n                        <Select\r\n                            {...field}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            label={label}\r\n                            {...others}\r\n                            fullWidth\r\n                            size={size}\r\n                        >\r\n                            {options.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                )}\r\n            />\r\n            {errorMessage && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{errorMessage}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputSelect;\r\n\r\nInputSelect.propTypes = {\r\n    bug: PropTypes.object,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    name: PropTypes.string,\r\n    options: PropTypes.any,\r\n};","import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllCatalog = async (page, pageSize) => await getData(Url.Catalogo, { page, pageSize });\r\nexport const GetByIdCatalog = async (id) => await getData(Url.CatalogoId, { id });\r\nexport const InsertCatalog = async (catalogo) => await postData(Url.Catalogo, catalogo);\r\nexport const UpdateCatalogs = async (catalogo) => await putData(Url.Catalogo, catalogo);\r\nexport const DeleteCatalog = async (idCatalogo) => await deleteData(Url.Catalogo, { idCatalogo });\r\nexport const GetAllByTipoCatalogo = async (page, pageSize, idTipoCatalogo) => await getData(Url.GetAllByTipoCatalogo, { page, pageSize, idTipoCatalogo });\r\nexport const GetAllBySubTipoCatalogo = async (page, pageSize, codigo, substring) => await getData(Url.GetAllBySubTipoCatalogo, { page, pageSize, codigo, substring });","export default __webpack_public_path__ + \"static/media/user.a6143582.png\";","import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllEmployee = async (page, pageSize) => await getData(Url.Empleado, { page, pageSize });\r\nexport const GetByIdEmployee = async (id) => await getData(Url.EmpleadoId, { id });\r\nexport const InsertEmployee = async (empleado) => await postData(Url.Empleado, empleado);\r\nexport const UpdateEmployees = async (empleado) => await putData(Url.Empleado, empleado);\r\nexport const DeleteEmployee = async (idEmpleado) => await deleteData(Url.Empleado, { idEmpleado });","import PropTypes from 'prop-types';\r\nimport {\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem\r\n} from '@mui/material';\r\nimport { Fragment } from 'react';\r\n\r\nconst SelectOnChange = ({ bug, disabled, options, value, onChange, size, label, name }) => {\r\n    let isError = false;\r\n    let errorMessage = '';\r\n    if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\r\n        isError = true;\r\n        errorMessage = bug[name].message;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <FormControl fullWidth error={isError}>\r\n                <InputLabel htmlFor=\"my-input\" id=\"demo-simple-select-label\" sx={{ fontSize: 14 }}>\r\n                    {label}\r\n                </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label={label}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    fullWidth\r\n                    size={size}\r\n                    disabled={disabled}\r\n                >\r\n                    {options.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectOnChange;\r\n\r\nSelectOnChange.propTypes = {\r\n    bug: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    value: PropTypes.any,\r\n    options: PropTypes.any,\r\n    size: PropTypes.any\r\n};","import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllCompany = async (page, pageSize) => await getData(Url.Empresa, { page, pageSize });\r\nexport const GetByIdCompany = async (id) => await getData(Url.EmpresaId, { id });\r\nexport const InsertCompany = async (empresa) => await postData(Url.Empresa, empresa);\r\nexport const UpdateCompanys = async (empresa) => await putData(Url.Empresa, empresa);\r\nexport const DeleteCompany = async (idEmpresa) => await deleteData(Url.Empresa, { idEmpresa });","import PropTypes from 'prop-types';\r\nimport {\r\n    Button,\r\n    Grid\r\n} from '@mui/material';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport user from 'assets/img/user.png';\r\nimport { Fragment } from 'react';\r\n\r\nconst PhotoModel = ({ OpenModal, disabledCapture, disabledDelete, EstadoImg, RemoverImg }) => {\r\n\r\n    return (\r\n        <>\r\n            {EstadoImg !== null ? (\r\n                <Fragment>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ pb: 2 }}>\r\n                        <img alt='Imagen de Usuario' src={EstadoImg} width={200} height={200} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sx={{ pb: 2 }}>\r\n                        <AnimateButton>\r\n                            <Button disabled={disabledDelete} variant=\"outlined\" fullWidth onClick={RemoverImg}>\r\n                                Eliminar\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Grid>\r\n                </Fragment>\r\n\r\n            ) : (\r\n                <Fragment>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ pb: 2 }}>\r\n                        <img alt='Imagen de Usuario' src={user} width={200} />\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={10} sx={{ pb: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button disabled={disabledCapture} variant=\"contained\" fullWidth onClick={OpenModal}>\r\n                                    Capturar\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhotoModel;\r\n\r\nPhotoModel.propTypes = {\r\n    EstadoImg: PropTypes.any,\r\n    disabledCapture: PropTypes.bool,\r\n    disabledDelete: PropTypes.bool,\r\n    OpenModal: PropTypes.func,\r\n    RemoverImg: PropTypes.func\r\n};","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Divider } from '@mui/material';\r\nimport MuiAccordion from '@mui/material/Accordion';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\n\r\n// assets\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n\r\nconst Accordion = ({ defaultExpandedId = null, title, defaultExpand, id, disabled, children, expandIcon, square, toggle }) => {\r\n    const theme = useTheme();\r\n\r\n    const [expanded, setExpanded] = useState(null);\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        if (toggle) setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setExpanded(defaultExpandedId);\r\n    }, [defaultExpandedId]);\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <MuiAccordion\r\n                key={id}\r\n                defaultExpanded={!disabled && defaultExpand}\r\n                expanded={(!toggle && !disabled && expanded) || (toggle && expanded === id)}\r\n                disabled={disabled}\r\n                square={square}\r\n                onChange={handleChange(id)}\r\n            >\r\n                <MuiAccordionSummary\r\n                    expandIcon={expandIcon || expandIcon === false ? expandIcon : <ExpandMoreIcon />}\r\n                    sx={{ color: theme.palette.mode === 'dark' ? 'grey.500' : 'grey.800', fontWeight: 500 }}\r\n                >\r\n                    {title}\r\n                </MuiAccordionSummary>\r\n                <MuiAccordionDetails>{children}</MuiAccordionDetails>\r\n            </MuiAccordion>\r\n            <Divider />\r\n        </Box>\r\n    );\r\n};\r\n\r\nAccordion.propTypes = {\r\n    expanded: PropTypes.any,\r\n    disabled: PropTypes.any,\r\n    defaultExpand: PropTypes.any,\r\n    childre: PropTypes.node,\r\n    title: PropTypes.node,\r\n    id: PropTypes.string,\r\n    defaultExpandedId: PropTypes.string,\r\n    expandIcon: PropTypes.object,\r\n    square: PropTypes.bool,\r\n    toggle: PropTypes.bool\r\n};\r\n\r\nexport default Accordion;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import { TextField, InputAdornment } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputOnChange = ({ label, value, startAdornment = false, onChange, onKeyDown, size, required, ...others }) => {\r\n    return (\r\n        <>\r\n            <TextField\r\n                label={label}\r\n                fullWidth\r\n                value={value}\r\n                onChange={onChange}\r\n                size={size}\r\n                onKeyDown={onKeyDown}\r\n                InputLabelProps={{\r\n                    className: required ? 'required-label' : '',\r\n                    required: required || false\r\n                }}\r\n                InputProps={{\r\n                    startAdornment: startAdornment ? <InputAdornment position=\"start\"></InputAdornment> : '',\r\n                }}\r\n                {...others}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputOnChange;\r\n\r\nInputOnChange.propTypes = {\r\n    onChange: PropTypes.func,\r\n    startAdornment: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.any,\r\n    onKeyDown: PropTypes.any,\r\n    required: PropTypes.bool\r\n};","import { getData } from '../UtilInstance';\r\nimport { Url } from '../instances/AuthRoute';\r\n\r\nexport const GetById = async (url, id) => await getData(url, { id });\r\n\r\nexport const GetAllSegmentoAgrupado = async (page, pageSize) => await getData(Url.SegmentoAgrupado, { page, pageSize });\r\nexport const GetAllBySegAgrupado = async (idSegmentoAgrupado, page, pageSize) => await getData(Url.SegmentoAfectado, { idSegmentoAgrupado, page, pageSize });\r\nexport const GetAllBySegAfectado = async (idSegmentoAfectado, page, pageSize) => await getData(Url.Subsegmento, { idSegmentoAfectado, page, pageSize });\r\n\r\nexport const GetAllBySubsegmento = async (idSubsegmento, page, pageSize) => await getData(Url.MetodoCie11, { idSubsegmento, page, pageSize });\r\n\r\nexport const GetAllTipoAtencion = async (page, pageSize) => await getData(Url.TipoAtencion, { page, pageSize });\r\nexport const GetAllAtencion = async (page, pageSize) => await getData(Url.Atencion, { page, pageSize });\r\nexport const GetAllByTipoAtencion = async (page, pageSize, idTipoAtencion) => await getData(Url.AtencionGetAllByTipoAtencion, { page, pageSize, idTipoAtencion });","import PropTypes from 'prop-types';\r\nimport { TextField } from '@mui/material';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport { LocalizationProvider, MobileDatePicker } from \"@mui/lab\";\r\nimport { Fragment } from 'react';\r\n\r\nconst InputDatePick = ({ value, label, onChange, required, ...others }) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <MobileDatePicker\r\n                    label={label}\r\n                    inputFormat=\"yyyy/MM/dd\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    renderInput={(params) => <TextField {...params} fullWidth />}\r\n                    KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\"\r\n                    }}\r\n                    {...others}\r\n                />\r\n            </LocalizationProvider>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputDatePick;\r\n\r\nInputDatePick.propTypes = {\r\n    onChange: PropTypes.func,\r\n    label: PropTypes.string,\r\n    value: PropTypes.any,\r\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 11h2v2h-2v2h2v2h-2v2h8V9h-8v2zm4 0h2v2h-2v-2zm0 4h2v2h-2v-2z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-4-8h2v2h-2zm0 4h2v2h-2z\"\n}, \"1\")], 'DomainTwoTone');\n\nexports.default = _default;","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}"],"sourceRoot":""}