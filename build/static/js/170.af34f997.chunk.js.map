{"version":3,"sources":["modules/Turner/Turner.jsx","api/instances/AuthRoute.js","api/UtilInstance.js","components/input/InputText.jsx","api/clients/TypeCatalogClient.js"],"names":["Turner","theme","useTheme","matchesXS","useMediaQuery","breakpoints","down","methods","useForm","errors","a","GetAllTypeCatalog","lsServer","data","entities","map","item","value","id","label","nombre","console","log","useEffect","GetAll","useState","text","setText","cardStyle","background","palette","mode","dark","main","grey","border","borderColor","title","sx","mt","gridSpacing","container","xl","lg","spacing","justifyContent","alignItems","variant","xs","onChange","e","target","size","fullWidth","pb","defaultValue","name","bug","sm","md","bgcolor","error","color","paper","component","Link","to","secondary","light","primary","info","warning","success","Url","Base","TipoCatalogo","TipoCatalogoId","Catalogo","CatalogoId","GetAllByTipoCatalogo","GetAllBySubTipoCatalogo","Empleado","EmpleadoId","Reintegro","ReintegroId","ListaReintegro","ListaReintegro_GetAllReintegro","ListaReintegroId","Cargo","CargoId","Panorama","PanoramaGetAllByCharge","PanoramaId","Recetario","RecetarioId","Medicamentos","MedicamentosId","PruebasAlcoholDroga","PruebasAlcoholDrogaId","Empresa","EmpresaId","SGSST","SGSSTId","RiesgoHistoriaLaboral","RiesgoHistoriaLaboralId","RHLByChargeHistorico","RHLByHistorico","RHLByChargeAdvance","RiesgoHistoriaLaboralEmpresa","RiesgoHistoriaLaboralIdEmpresa","RHLByChargeHistoricoEmpresa","RHLByHistoricoEmpresa","RHLByChargeAdvanceEmpresa","Proveedor","ProveedorId","Usuarios","UsuariosId","UsuariosEmail","RegistroAtencion","RegistroAtencio_GetAllAtencion","RegistroAtencionId","Paraclinicos","Paraclinicos_GetAllByTypeParaclinico","ParaclinicosId","Ordenes","OrdenesId","Asesorias","AsesoriasId","Accidentalidad","AccidentalidadId","postData","url","datos","axios","method","headers","then","respuesta","status","Error","catch","getData","parametros","urlGet","URL","Object","keys","forEach","key","searchParams","append","get","putData","deleteData","urlDelete","delete","InputText","required","others","render","field","InputLabelProps","className","page","pageSize","GetByIdTypeCatalog","InsertTypeCatalog","tipoCatalogo","UpdateTypeCatalogs","DeleteTypeCatalog","idTipoCatalogo"],"mappings":"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","file":"static/js/170.af34f997.chunk.js","sourcesContent":["import { useTheme } from '@mui/material/styles';\r\nimport { useState, useEffect } from 'react';\r\nimport { Button, Card, TextField, CardActions, useMediaQuery, CardContent, CardHeader, Divider, Grid, Typography } from '@mui/material';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n// project imports\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nimport { GetAllTypeCatalog } from 'api/clients/TypeCatalogClient';\r\nimport InputText from 'components/input/InputText';\r\n\r\n\r\n// ===============================|| UI CARDS ||=============================== //\r\n\r\nconst Turner = () => {\r\n    const theme = useTheme();\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const methods = useForm();\r\n    /* { resolver: yupResolver(validationSchema) } */\r\n\r\n    const { errors } = methods;\r\n\r\n    /* METODO DONDE SE LLENA LA LISTA Y TOMA DE DATOS */\r\n    async function GetAll() {\r\n        try {\r\n            const lsServer = await GetAllTypeCatalog(0, 0);\r\n            var result = lsServer.data.entities.map((item) => ({\r\n                value: item.id,\r\n                label: item.nombre\r\n            }));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    /* EL useEffect QUE LLENA LA LISTA */\r\n    useEffect(() => {\r\n        GetAll();\r\n    }, [])\r\n\r\n    const [text, setText] = useState('');\r\n    const cardStyle = {\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[100]\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainCard\r\n                title=\"Solicita tu turno\"\r\n                sx={{ mt: gridSpacing }}\r\n            >\r\n                <Grid container >\r\n\r\n                    <Grid item xl={12} lg={4}>\r\n                        <SubCard title=\"Solicitud de turno por código QR\">\r\n                            <Card sx={cardStyle}>\r\n                                <CardContent>\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid item xl={4}>\r\n                                        </Grid>\r\n                                        <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\">\r\n\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Grid container justifyContent=\"center\">\r\n\r\n                                    </Grid>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={4}>\r\n                        <SubCard title=\"Solicitud de turno por número de documento\">\r\n                            <Card sx={cardStyle}>\r\n                                <CardContent>\r\n                                    <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                onChange={(e) => setText(e.target.value)}\r\n                                                value={text}\r\n                                                size={matchesXS ? 'small' : 'medium'}\r\n                                                fullWidth\r\n                                                label=\"Digite Nro. de documento\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Grid container justifyContent=\"center\">\r\n                                        <Grid item>\r\n                                            <Button variant=\"contained\">Solicitar turno</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </SubCard>\r\n                    </Grid>\r\n                    <Divider />\r\n                    {/* \r\n                    Resultado de la consulta */}\r\n                    <Grid item xs={12}>\r\n                        <SubCard title=\"Información personal\">\r\n                            {/* <Grid container spacing={gridSpacing}> */}\r\n\r\n                            <Grid container spacing={2} sx={{ pb: 4 }}>\r\n                                <Grid item xs={3}>\r\n                                    <FormProvider {...methods}>\r\n                                        <InputText\r\n                                            defaultValue=\"\"\r\n                                            fullWidth\r\n                                            name=\"codigo\"\r\n                                            label=\"N° Documento\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <FormProvider {...methods}>\r\n                                        <InputText\r\n                                            defaultValue=\"\"\r\n                                            fullWidth\r\n                                            name=\"codigo\"\r\n                                            label=\"Apellidos y Nombres\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <FormProvider {...methods}>\r\n                                        <InputText\r\n                                            defaultValue=\"\"\r\n                                            fullWidth\r\n                                            name=\"codigo\"\r\n                                            label=\"Teléfono\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <FormProvider {...methods}>\r\n                                        <InputText\r\n                                            defaultValue=\"\"\r\n                                            fullWidth\r\n                                            name=\"codigo\"\r\n                                            label=\"Email\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                            {/* </Grid> */}\r\n                        </SubCard>\r\n                    </Grid>\r\n\r\n                    <Divider />\r\n                    <Grid item xs={12}>\r\n                        <SubCard title=\"Qué quieres hacer? - Elige El tipo de atención que  solicitas:\">\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item sm={6} md={4}>\r\n                                    <Card sx={{ bgcolor: theme.palette.error.main, color: theme.palette.background.paper }}>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <Typography variant=\"h5\" sx={{ color: theme.palette.background.paper }}>\r\n                                                    TRIAGE\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                        <Divider />\r\n                                        <CardContent>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid container justifyContent=\"center\">\r\n                                                    <Grid item>\r\n                                                        <Button component={Link} to=\"/e-commerce/products\" variant=\"contained\" fullWidth>\r\n                                                            Solicitar turno\r\n                                                        </Button>\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n                                            </Grid>\r\n\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item sm={6} md={4}>\r\n                                    <Card sx={{ bgcolor: theme.palette.secondary.main, color: theme.palette.secondary.light }}>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <Typography variant=\"h5\" sx={{ color: theme.palette.secondary.light }}>\r\n                                                    ENFERMERIA\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                        <Divider />\r\n                                        <CardContent>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid container justifyContent=\"center\">\r\n                                                    <Grid item>\r\n                                                        <Button component={Link} to=\"/e-commerce/products\" variant=\"contained\" fullWidth>\r\n                                                            Solicitar turno\r\n                                                        </Button>\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n                                            </Grid>\r\n\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item sm={6} md={4}>\r\n                                    <Card sx={{ bgcolor: theme.palette.primary.main, color: theme.palette.background.paper }}>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <Typography variant=\"h5\" sx={{ color: theme.palette.background.paper }}>\r\n                                                    ASESORIAS\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                        <Divider />\r\n                                        <CardContent>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid container justifyContent=\"center\">\r\n                                                    <Grid item>\r\n                                                        <Button component={Link} to=\"/e-commerce/products\" variant=\"contained\" fullWidth>\r\n                                                            Solicitar turno\r\n                                                        </Button>\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n                                            </Grid>\r\n\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item sm={6} md={4}>\r\n                                    <Card sx={{ bgcolor: theme.palette.info.dark, color: theme.palette.background.paper }}>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <Typography variant=\"h5\" sx={{ color: theme.palette.background.paper }}>\r\n                                                    EXÁMENES MÉDICOS OCUPACIONALES\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                        <Divider />\r\n                                        <CardContent>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid container justifyContent=\"center\">\r\n                                                    <Grid item>\r\n                                                        <Button component={Link} to=\"/e-commerce/products\" variant=\"contained\" fullWidth>\r\n                                                            Solicitar turno\r\n                                                        </Button>\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n                                            </Grid>\r\n\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item sm={6} md={4}>\r\n                                    <Card sx={{ bgcolor: theme.palette.warning.dark, color: theme.palette.grey[800] }}>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <Typography variant=\"h5\" sx={{ color: theme.palette.grey[800] }}>\r\n                                                    EXÁMENES PARACLÍNICOS\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                        <Divider />\r\n                                        <CardContent>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid container justifyContent=\"center\">\r\n                                                    <Grid item>\r\n                                                        <Button component={Link} to=\"/e-commerce/products\" variant=\"contained\" fullWidth>\r\n                                                            Solicitar turno\r\n                                                        </Button>\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n                                            </Grid>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item sm={6} md={4}>\r\n                                    <Card sx={{ bgcolor: theme.palette.success.main, color: theme.palette.background.paper }}>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <Typography variant=\"h5\" sx={{ color: theme.palette.background.paper }}>\r\n                                                    PRUEBAS DE ALCOHOL Y DROGA\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                        <Divider />\r\n                                        <CardContent>\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid container justifyContent=\"center\">\r\n                                                    <Grid item>\r\n                                                        <Button component={Link} to=\"/e-commerce/products\" variant=\"contained\" fullWidth>\r\n                                                            Solicitar turno\r\n                                                        </Button>\r\n\r\n                                                    </Grid>\r\n                                                </Grid>\r\n\r\n\r\n                                            </Grid>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Turner;\r\n\r\n","export const Url = {\r\n    Base: 'https://siiso4.westus3.cloudapp.azure.com:44347/',\r\n\r\n    //'https://localhost:44347/', http://siiso4.westus3.cloudapp.azure.com/\r\n\r\n    TipoCatalogo: 'api/TipoCatalogo',\r\n    TipoCatalogoId: 'api/TipoCatalogo/id',\r\n\r\n    Catalogo: 'api/Catalogo',\r\n    CatalogoId: 'api/Catalogo/id',\r\n    GetAllByTipoCatalogo: 'api/Catalogo/GetAllByTipoCatalogo',\r\n    GetAllBySubTipoCatalogo: 'api/Catalogo/GetAllBySubTipoCatalogo',\r\n\r\n    Empleado: 'api/Empleado',\r\n    EmpleadoId: 'api/Empleado/id',\r\n\r\n    Reintegro: 'api/Reintegro',\r\n    ReintegroId: 'api/Reintegro/id',\r\n\r\n    ListaReintegro: 'api/ListaReintegro',\r\n    ListaReintegro_GetAllReintegro: 'api/ListaReintegro/GetAllReintegro',\r\n    ListaReintegroId: 'api/ListaReintegro/id',\r\n\r\n    Cargo: 'api/Cargo',\r\n    CargoId: 'api/Cargo/id',\r\n\r\n    Panorama: 'api/Panoramariesgo',\r\n    PanoramaGetAllByCharge: 'api/Panoramariesgo/GetAllByCharge',\r\n    PanoramaId: 'api/Panoramariesgo/id',\r\n\r\n    Recetario: 'api/Recetario',\r\n    RecetarioId: 'api/Recetario/id',\r\n\r\n    Medicamentos: 'api/Medicamentos',\r\n    MedicamentosId: 'api/Medicamentos/id',\r\n\r\n    PruebasAlcoholDroga: 'api/PruebasAlcoholDroga',\r\n    PruebasAlcoholDrogaId: 'api/PruebasAlcoholDroga/id',\r\n\r\n    Empresa: 'api/Empresa',\r\n    EmpresaId: 'api/Empresa/id',\r\n\r\n    SGSST: 'api/SistemaGestion',\r\n    SGSSTId: 'api/SistemaGestion/id',\r\n\r\n    RiesgoHistoriaLaboral: 'api/RiesgoHistoriaLaboral',\r\n    RiesgoHistoriaLaboralId: 'api/RiesgoHistoriaLaboral/id',\r\n    RHLByChargeHistorico: 'api/RiesgoHistoriaLaboral/GetAllByChargeHistorico',\r\n    RHLByHistorico: 'api/RiesgoHistoriaLaboral/GetAllByHistorico',\r\n    RHLByChargeAdvance: 'api/RiesgoHistoriaLaboral/GetAllByChargeAdvance',\r\n\r\n    RiesgoHistoriaLaboralEmpresa: 'api/RiesgoHistoriaLaboralOtrasEmpresas',\r\n    RiesgoHistoriaLaboralIdEmpresa: 'api/RiesgoHistoriaLaboralOtrasEmpresas/id',\r\n    RHLByChargeHistoricoEmpresa: 'api/RiesgoHistoriaLaboralOtrasEmpresas/GetAllByChargeHistorico',\r\n    RHLByHistoricoEmpresa: 'api/RiesgoHistoriaLaboralOtrasEmpresas/GetAllByHistorico',\r\n    RHLByChargeAdvanceEmpresa: 'api/RiesgoHistoriaLaboralOtrasEmpresas/GetAllByChargeAdvance',\r\n\r\n    Proveedor: 'api/Proveedor',\r\n    ProveedorId: 'api/Proveedor/id',\r\n\r\n    Usuarios: 'api/Usuarios',\r\n    UsuariosId: 'api/Usuarios/id',\r\n    UsuariosEmail: 'api/Usuarios/email',\r\n\r\n    RegistroAtencion: 'api/RegistroAtencion',\r\n    RegistroAtencio_GetAllAtencion: 'api/RegistroAtencion/GetAllAtencion',\r\n    RegistroAtencionId: 'api/RegistroAtencion/id',\r\n\r\n    Paraclinicos: 'api/Paraclinicos',\r\n    Paraclinicos_GetAllByTypeParaclinico: 'api/Paraclinicos/GetAllByTipoParaclinico',\r\n    ParaclinicosId: 'api/Paraclinicos/id',\r\n\r\n    Ordenes: 'api/Ordenes',\r\n    OrdenesId: 'api/Ordenes/id',\r\n\r\n    Asesorias: 'api/Asesorias',\r\n    AsesoriasId: 'api/Asesorias/id',\r\n\r\n    Accidentalidad: 'api/Accidentalidad',\r\n    AccidentalidadId: 'api/Accidentalidad/id',\r\n\r\n    RegistroAtencion: 'api/RegistroAtencion',\r\n    RegistroAtencionId: 'api/RegistroAtencion/id',\r\n\r\n    HistoriaLaboral: 'api/HistoriaLaboral',\r\n    HistoriaLaboralGetAllByDocument: 'api/HistoriaLaboral/GetAllByDocument',\r\n    HistoriaLaboralId: 'api/HistoriaLaboral/id',\r\n\r\n    HistoriaLaboralOtrasEmpresas: 'api/HistoriaLaboralOtrasEmpresas',\r\n    HistoriaLaboralOtrasEmpresasGetAllByDocument: 'api/HistoriaLaboralOtrasEmpresas/GetAllByDocument',\r\n    HistoriaLaboralOtrasEmpresasId: 'api/HistoriaLaboralOtrasEmpresas/id',\r\n\r\n    CIE11: 'api/CIE11',\r\n    CIE11Id: 'api/CIE11/id',\r\n\r\n    Plantilla: 'api/Plantilla',\r\n    PlantillaId: 'api/Plantilla/id',\r\n\r\n    Items: 'api/Item',\r\n    ItemsId: 'api/Item/id',\r\n    ItemsGetAllByAtencion: 'api/Item/GetAllByAtencion',\r\n\r\n    SegmentoAgrupado: 'api/SegmentoAgrupado',\r\n    SegmentoAfectado: 'api/SegmentoAfectado/GetAllBySegAgrupado',\r\n    Subsegmento: 'api/Subsegmento/GetAllBySegAfectado',\r\n    MetodoCie11: 'api/CIE11/GetAllBySubsegmento',\r\n\r\n    SegAfectado: 'api/SegmentoAfectado',\r\n    Subsegment: 'api/Subsegmento',\r\n\r\n    HistoriaClinica: 'api/HistoriaClinica',\r\n    HistoriaClinicaId: 'api/HistoriaClinica/id',\r\n\r\n    NotaEvolucion: 'api/NotaEvolucion',\r\n    NotaEvolucionId: 'api/NotaEvolucion/id',\r\n\r\n    NotaEnfermeria: 'api/NotaEnfermeria',\r\n    NotaEnfermeriaId: 'api/NotaEnfermeria/id',\r\n\r\n    MedicinaLaboral: 'api/MedicinaLaboralX',\r\n    MedicinaLaboralId: 'api/MedicinaLaboralX/id',\r\n\r\n    AusentismoLaboral: 'api/AusentismoLaboral',\r\n    AusentismoLaboralId: 'api/AusentismoLaboral/id',\r\n\r\n    HistoriaClinicaOcupacional: 'api/HistoriaClinicaOcupacional',\r\n    HCOGetAllByDocumento: 'api/HistoriaClinicaOcupacional/GetAllByDocumento',\r\n    HistoriaClinicaOcupacionalId: 'api/HistoriaClinicaOcupacional/id',\r\n    HistoriaClinicaOcupacionalReport: 'api/HistoriaClinicaOcupacional/GetById',\r\n    GetLastRecordHisCliOcu: 'api/HistoriaClinicaOcupacional/GetLastRecord',\r\n\r\n    TipoAtencion: 'api/TipoAtencion',\r\n    AtencionGetAllByTipoAtencion: 'api/Atencion/GetAllByTipoAtencion',\r\n    Atencion: 'api/Atencion',\r\n\r\n    Cuestionario: 'api/CuestionarioPrevencion',\r\n    CuestionarioSave: 'api/CuestionarioPrevencion/Save',\r\n    CuestionarioId: 'api/CuestionarioPrevencion/id',\r\n\r\n}","import { Url } from \"./instances/AuthRoute\";\r\nimport { getToken } from \"./clients/AuthClient\";\r\nimport axios from \"axios\";\r\n\r\nexport async function postData(url = '', datos = {}, headersVali = false) {\r\n\r\n    if (headersVali) {\r\n        try {\r\n            return await axios({\r\n                method: 'post',\r\n                url: `${Url.Base}${url}`,\r\n                data: datos,\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            }).then(respuesta => {\r\n                if (respuesta.status !== 200) throw Error(respuesta.status);\r\n                return respuesta;\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        } catch (error) {\r\n            console.log(\"catch post \", error);\r\n        }\r\n    } else {\r\n        try {\r\n            return await axios({\r\n                method: 'post',\r\n                url: `${Url.Base}${url}`,\r\n                data: datos,\r\n            }).then(respuesta => {\r\n                if (respuesta.status !== 200) throw Error(respuesta.status);\r\n                return respuesta;\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        } catch (error) {\r\n            console.log(\"catch post \", error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport async function getData(url = '', parametros = {}) {\r\n    try {\r\n        const urlGet = new URL(`${Url.Base}${url}`)\r\n        Object.keys(parametros).forEach(key => urlGet.searchParams.append(key, parametros[key]))\r\n\r\n        return await axios.get(urlGet)\r\n            .then(respuesta => {\r\n                if (respuesta.status !== 200) throw Error(respuesta.status);\r\n                return respuesta;\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n    } catch (error) {\r\n        console.log(\"catch get \", error);\r\n    }\r\n}\r\n\r\nexport async function putData(url = '', datos = {}) {\r\n    try {\r\n        return await axios({\r\n            method: 'put',\r\n            url: `${Url.Base}${url}`,\r\n            data: datos\r\n        }).then(respuesta => {\r\n            if (respuesta.status !== 200) throw Error(respuesta.status);\r\n            return respuesta;\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    } catch (error) {\r\n        console.log(\"catch put \", error);\r\n    }\r\n}\r\n\r\nexport async function deleteData(url = '', parametros = {}) {\r\n    try {\r\n        const urlDelete = new URL(`${Url.Base}${url}`)\r\n        Object.keys(parametros).forEach(key => urlDelete.searchParams.append(key, parametros[key]))\r\n\r\n        return await axios.delete(urlDelete)\r\n            .then(respuesta => {\r\n                if (respuesta.status !== 200) throw Error(respuesta.status);\r\n\r\n                return respuesta;\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    catch (error) {\r\n        console.log(\"catch delete \", error);\r\n    }\r\n}","import PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport {\r\n    FormHelperText,\r\n    Grid,\r\n    TextField,\r\n} from '@mui/material';\r\n\r\nconst InputText = ({ bug, defaultValue, label, size, fullWidth = true, name, required, ...others }) => {\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                render={({ field }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        label={label}\r\n                        size={size}\r\n                        InputLabelProps={{\r\n                            className: required ? 'required-label' : '',\r\n                            required: required || false\r\n                        }}\r\n                        error={bug ? true : false}\r\n                        fullWidth\r\n                        {...others}\r\n                    />\r\n                )}\r\n            />\r\n            {bug && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{bug}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputText;\r\n\r\nInputText.propTypes = {\r\n    bug: PropTypes.object,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    name: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    fullWidth: PropTypes.bool\r\n};","import { Url } from '../instances/AuthRoute';\r\nimport { getData, deleteData, postData, putData } from '../UtilInstance';\r\n\r\nexport const GetAllTypeCatalog = async (page, pageSize) => await getData(Url.TipoCatalogo, { page, pageSize });\r\nexport const GetByIdTypeCatalog = async (id) => await getData(Url.TipoCatalogoId, { id });\r\nexport const InsertTypeCatalog = async (tipoCatalogo) => await postData(Url.TipoCatalogo, tipoCatalogo);\r\nexport const UpdateTypeCatalogs = async (tipoCatalogo) => await putData(Url.TipoCatalogo, tipoCatalogo);\r\nexport const DeleteTypeCatalog = async (idTipoCatalogo) => await deleteData(Url.TipoCatalogo, { idTipoCatalogo });"],"sourceRoot":""}